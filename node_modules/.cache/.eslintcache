[{"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/src/index.js":"1","/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/src/App.js":"2","/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/src/reportWebVitals.js":"3","/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/src/App3D.js":"4","/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/src/contexts/Web3Context.js":"5","/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/src/Pages/Home.js":"6","/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/src/components/useKeyPress.js":"7","/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/src/components/ConnectWalletScreen.js":"8","/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/src/components/WidthContainer.js":"9","/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/src/utils/errorParser.js":"10","/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/src/Pages/Mint.js":"11","/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/src/components/RoomScene/RoomSceneLoader.js":"12","/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/src/Pages/Whitepaper.js":"13","/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/src/components/TerminalScreen.js":"14","/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/src/components/BootupScreen.js":"15","/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/src/components/RoomScene/RoomScene.js":"16","/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/src/components/SunkenInput.js":"17","/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/src/components/Panel.js":"18","/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/src/components/RoomScene/ComputerModel.js":"19","/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/src/components/VertArrowScrollList.js":"20","/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/src/components/ScrollListItem.js":"21","/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/src/components/Whitepaper/WhitePaperBody.js":"22","/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/src/components/StarterScreen.js":"23","/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/src/components/RoomScene/GLBModelViewer.js":"24","/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/src/components/Whitepaper/WhitePaperPoint.js":"25","/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/src/components/Whitepaper/WhitePaperTitle.js":"26","/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/src/components/Whitepaper/WhitePaperPre.js":"27","/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/src/components/Whitepaper/WhitePaperSubtitle.js":"28","/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/src/components/Whitepaper/WhitePaperText.js":"29","/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/src/components/RoomScene/EditedScene.js":"30"},{"size":500,"mtime":1649714386658,"results":"31","hashOfConfig":"32"},{"size":12246,"mtime":1649714386580,"results":"33","hashOfConfig":"32"},{"size":362,"mtime":1649714386658,"results":"34","hashOfConfig":"32"},{"size":214,"mtime":1649714386580,"results":"35","hashOfConfig":"32"},{"size":88,"mtime":1649714386657,"results":"36","hashOfConfig":"32"},{"size":1924,"mtime":1649714386581,"results":"37","hashOfConfig":"32"},{"size":960,"mtime":1649714386657,"results":"38","hashOfConfig":"32"},{"size":1029,"mtime":1649714386637,"results":"39","hashOfConfig":"32"},{"size":900,"mtime":1649714386656,"results":"40","hashOfConfig":"32"},{"size":544,"mtime":1649714386659,"results":"41","hashOfConfig":"32"},{"size":3855,"mtime":1649714386581,"results":"42","hashOfConfig":"32"},{"size":3678,"mtime":1649714386639,"results":"43","hashOfConfig":"32"},{"size":266,"mtime":1649714386582,"results":"44","hashOfConfig":"32"},{"size":117,"mtime":1649714386653,"results":"45","hashOfConfig":"32"},{"size":3208,"mtime":1649714386636,"results":"46","hashOfConfig":"32"},{"size":6347,"mtime":1649784831074,"results":"47","hashOfConfig":"32"},{"size":1136,"mtime":1649714386653,"results":"48","hashOfConfig":"32"},{"size":1474,"mtime":1649714386637,"results":"49","hashOfConfig":"32"},{"size":745,"mtime":1649714386637,"results":"50","hashOfConfig":"32"},{"size":2350,"mtime":1649714386654,"results":"51","hashOfConfig":"32"},{"size":531,"mtime":1649714386652,"results":"52","hashOfConfig":"32"},{"size":13226,"mtime":1649714386655,"results":"53","hashOfConfig":"32"},{"size":1058,"mtime":1649714386653,"results":"54","hashOfConfig":"32"},{"size":3440,"mtime":1649714386638,"results":"55","hashOfConfig":"32"},{"size":433,"mtime":1649714386655,"results":"56","hashOfConfig":"32"},{"size":376,"mtime":1649714386656,"results":"57","hashOfConfig":"32"},{"size":371,"mtime":1649714386655,"results":"58","hashOfConfig":"32"},{"size":382,"mtime":1649714386655,"results":"59","hashOfConfig":"32"},{"size":425,"mtime":1649714386656,"results":"60","hashOfConfig":"32"},{"size":13889,"mtime":1649784702658,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"uel1ca",{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"64"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"64"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/src/index.js",[],["140","141"],"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/src/App.js",["142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169"],"import { useState, useEffect } from \"react\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport Web3 from \"web3\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Link,\n  useNavigate,\n  useLocation,\n} from \"react-router-dom\";\nimport \"./App.css\";\nimport { Web3Context } from \"./contexts/Web3Context\";\nimport CyberDeck from \"./abis/CyberDeck.json\";\nimport FakeNFT from \"./abis/FakeNFT.json\";\nimport ERC721 from \"./abis/ERC721.json\";\n\nimport CONFIG from \"./config.json\";\nimport Home from \"./Pages/Home\";\nimport BootupScreen from \"./components/BootupScreen\";\nimport { WidthContainer } from \"./components/WidthContainer\";\nimport ConnectWalletScreen from \"./components/ConnectWalletScreen\";\nimport useKeyPress from \"./components/useKeyPress\";\nimport Whitepaper from \"./Pages/Whitepaper\";\nimport TerminalScreen from \"./components/TerminalScreen\";\nimport RoomSceneLoader from \"./components/RoomScene/RoomSceneLoader\";\nimport App3D from \"./App3D\";\nimport Mint from \"./Pages/Mint\";\nimport errorParser from \"./utils/errorParser\";\nimport {\n  BrowserView,\n  MobileView,\n  isBrowser,\n  isMobile,\n} from \"react-device-detect\";\n\nconst allNFTS = [\n  \"0x614e92021a82240bc73AB61e899FA75d91087964\",\n  \"0x55B2431d6Aa7AD9A726f652305f21314d636A9c6\",\n  \"0xa74C87459c8B03aB5234B4CcdD743e53DAd34f3C\",\n];\n\nfunction App() {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [web3, setWeb3] = useState(null);\n  const [cyberDeck, setCyberDeck] = useState(null);\n  const [fakeNft, setFakeNft] = useState(null);\n  const [supplyAvailable, setSupplyAvailable] = useState(0);\n  const [balanceOf, setBalanceOf] = useState(0);\n  const [supply, setTotalSupply] = useState(null);\n  const [price, setPrice] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [currentNetwork, setCurrentNetwork] = useState(null);\n  const clearKeyPress = useKeyPress(\"c\");\n\n  const [blockchainExplorerURL, setBlockchainExplorerURL] = useState(\n    \"https://etherscan.io/\"\n  );\n  const [openseaURL, setOpenseaURL] = useState(\n    \"https://opensea.io/collection/hogwash-polygon\"\n  );\n\n  const [isMinting, setIsMinting] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [message, setMessage] = useState(null);\n\n  const [currentTime, setCurrentTime] = useState(new Date().getTime());\n  const [revealTime, setRevealTime] = useState(0);\n  const [ownedTokens, setOwnedTokens] = useState(null);\n  const [allowedNfts, setAllowedNfts] = useState([]);\n  const [ownedAllowedNfts, setOwnedAllowedNfts] = useState([]);\n\n  // ANIMATION CONSTS\n  const [isLoadingInitialData, setIsLoadingInitialData] = useState(false);\n  const [isLoadingCyberdeck, setIsLoadingCyberdeck] = useState(false);\n  const [isLoadingUserTokens, setIsLoadingUserTokens] = useState(false);\n  const [clearedBootup, setClearedBootup] = useState(false);\n\n  const mintNFTHandler = async ({ tokenAddress, tokenId }) => {\n    // Mint NFT\n    if (cyberDeck) {\n      setIsMinting(true);\n      setIsError(false);\n      const price = await cyberDeck.methods.price().call();\n\n      await cyberDeck.methods\n        .buy(tokenAddress, tokenId)\n        .send({\n          from: account,\n          value: parseInt(price.toString()).toString(),\n        })\n        .on(\"receipt\", async () => {\n          try {\n            await loadBlockchainData(true);\n          } catch (e) {}\n        })\n        .on(\"error\", (error) => {\n          window.alert(\n            errorParser.parseError({\n              error: error.message.toString(),\n              errorSet: errorParser.cyberDeckErrors,\n            })\n          );\n          setIsError(true);\n        });\n    }\n\n    setIsMinting(false);\n  };\n\n  async function getParentNft({ _account, _index, _cyberDeck }) {\n    try {\n      const tokenId = await _cyberDeck.methods\n        .tokenOfOwnerByIndex(_account, _index)\n        .call();\n      const parentNft = await _cyberDeck.methods.parentNfts(tokenId).call();\n      const nftContract = new web3.eth.Contract(\n        ERC721.abi,\n        parentNft.tokenAddress\n      );\n\n      const ownerOfParent = await nftContract.methods\n        .ownerOf(parentNft.tokenId)\n        .call();\n      let resp = {\n        cyberDeckOwner: _account,\n        index: _index,\n        tokenId: tokenId,\n        parentTokenAddress: parentNft.tokenAddress,\n        parentTokenId: parentNft.tokenId,\n        parentTokenOwner: ownerOfParent,\n      };\n      return { tokenData: resp };\n    } catch (e) {\n      let resp = {\n        cyberDeckOwner: _account,\n        index: _index,\n        tokenId: -1,\n        error: e,\n      };\n      return resp;\n    }\n  }\n\n  async function getNftAndMetadata({}) {}\n\n  async function getAllowedNFT({ nftAddress, _account }) {\n    try {\n      const nftContract = new web3.eth.Contract(FakeNFT.abi, nftAddress);\n      const _bo = await nftContract.methods.balanceOf(_account).call();\n      let otp = [];\n      const [name, symbol] = await Promise.all([\n        nftContract.methods.name().call(),\n        nftContract.methods.symbol().call(),\n      ]);\n      if (_bo < 1) {\n        return [];\n      }\n\n      for (let i = 0; i < _bo; i++) {\n        otp.push(nftContract.methods.tokenOfOwnerByIndex(_account, i).call());\n      }\n\n      const tIds = await Promise.all(otp);\n      let twd = [];\n      for (const id of tIds) {\n        twd.push({\n          name: name,\n          symbol: symbol,\n          address: nftAddress,\n          tokenId: id,\n        });\n      }\n      return twd;\n    } catch (e) {\n      return [];\n    }\n  }\n\n  async function getAllAllowedNFTs({ _account }) {\n    let ap = [];\n    for (const a of allNFTS) {\n      ap.push(getAllowedNFT({ nftAddress: a, _account: _account }));\n    }\n\n    const al = await Promise.all(ap);\n    let allEm = [];\n    for (const l of al) {\n      allEm = [...allEm, ...l];\n    }\n    setOwnedAllowedNfts(allEm);\n  }\n  async function getOwnedTokens({ _account, _cyberDeck }) {\n    const _balanceOf = await _cyberDeck.methods.balanceOf(_account).call();\n\n    let tokenPromises = [];\n    for (let i = 0; i < _balanceOf; i++) {\n      tokenPromises.push(\n        getParentNft({ _account: _account, _index: i, _cyberDeck: _cyberDeck })\n      );\n    }\n\n    let ot = await Promise.all(tokenPromises);\n    ot = ot.filter(\n      ({ tokenData }) =>\n        tokenData &&\n        !tokenData.error &&\n        tokenData.parentTokenOwner &&\n        tokenData.parentTokenOwner.toString() === _account.toString()\n    );\n    setOwnedTokens(ot);\n  }\n\n  useEffect(() => {\n    if (clearKeyPress && !isLoadingInitialData) {\n      setClearedBootup(true);\n    }\n  }, [clearKeyPress]);\n\n  function clearMobileBootup() {\n    if (isMobile && !isLoadingInitialData) {\n      setClearedBootup(true);\n    }\n  }\n\n  const loadBlockchainData = async (_clearedBootup) => {\n    // Fetch Contract, Data, etc.\n    if (web3) {\n      setClearedBootup(_clearedBootup);\n      setIsLoadingInitialData(true);\n      const networkId = await web3.eth.net.getId();\n      setCurrentNetwork(networkId);\n\n      try {\n        if (\n          !CyberDeck.networks[networkId] ||\n          !CyberDeck.networks[networkId].address\n        ) {\n          setIsLoadingInitialData(false);\n\n          // window.alert(\"Please Connect to the Ethereum Mainnet\");\n          return;\n        }\n        const cyberDeck = new web3.eth.Contract(\n          CyberDeck.abi,\n          CyberDeck.networks[networkId].address\n        );\n        const fakeNft = new web3.eth.Contract(\n          FakeNFT.abi,\n          FakeNFT.networks[networkId].address\n        );\n        setIsLoadingCyberdeck(true);\n\n        setCyberDeck(cyberDeck);\n        setFakeNft(fakeNft);\n        const price = await cyberDeck.methods.price().call();\n        const maxSupply = await cyberDeck.methods.maxSupply().call();\n        const totalSupply = await cyberDeck.methods.totalSupply().call();\n        setPrice(price);\n        setTotalSupply(totalSupply);\n        setSupplyAvailable(maxSupply - totalSupply);\n\n        if (networkId !== 5777) {\n          setBlockchainExplorerURL(\n            CONFIG.NETWORKS[networkId].blockchainExplorerURL\n          );\n          setOpenseaURL(CONFIG.NETWORKS[networkId].openseaURL);\n        }\n\n        if (account) {\n          setIsLoadingUserTokens(true);\n          await getAllAllowedNFTs({ _account: account });\n          await getOwnedTokens({ _account: account, _cyberDeck: cyberDeck });\n        }\n        setIsLoadingInitialData(false);\n        // setIsLoadingCyberdeck(false);\n        // setIsLoadingUserTokens(false);\n      } catch (error) {\n        setIsError(true);\n        setMessage(\n          \"Contract not deployed to current network, please change network in MetaMask\"\n        );\n      }\n    }\n  };\n  const loadWeb3 = async () => {\n    if (typeof window.ethereum !== \"undefined\" && !account) {\n      const web3 = new Web3(window.ethereum, {\n        transactionConfirmationBlocks: 1,\n      });\n      setWeb3(web3);\n\n      const accounts = await web3.eth.getAccounts();\n\n      if (accounts.length > 0) {\n        setAccount(accounts[0]);\n      } else {\n        setMessage(\"Please connect with MetaMask\");\n      }\n\n      window.ethereum.on(\"accountsChanged\", function (accounts) {\n        setAccount(accounts[0]);\n        setMessage(null);\n      });\n\n      window.ethereum.on(\"chainChanged\", (chainId) => {\n        // Handle the new chain.\n        // Correctly handling chain changes can be complicated.\n        // We recommend reloading the page unless you have good reason not to.\n        window.location.reload();\n      });\n    }\n  };\n\n  const web3Handler = async () => {\n    if (web3) {\n      const accounts = await window.ethereum.request({\n        method: \"eth_requestAccounts\",\n      });\n      setAccount(accounts[0]);\n    }\n  };\n\n  useEffect(() => {\n    loadWeb3();\n    loadBlockchainData(false);\n  }, [account]);\n\n  return (\n    <div className=\"App\">\n      <>\n        <Web3Context.Provider\n          value={{\n            account,\n            setAccount,\n            cyberDeck,\n            web3,\n            web3Handler,\n            supply,\n            mintNFTHandler,\n            ownedAllowedNfts,\n            ownedTokens,\n          }}\n        >\n          {false ? (\n            <>\n              <TerminalScreen>\n                <ConnectWalletScreen />\n              </TerminalScreen>\n            </>\n          ) : (\n            <>\n              {!clearedBootup && location.pathname.length > 1 ? (\n                <TerminalScreen onClick={clearMobileBootup}>\n                  <BootupScreen\n                    isLoadingCyberdeck={isLoadingCyberdeck}\n                    isLoadingUserTokens={isLoadingUserTokens}\n                    isLoadingInitialData={isLoadingInitialData}\n                    account={account}\n                  />\n                </TerminalScreen>\n              ) : (\n                <Routes>\n                  <Route\n                    path=\"/whitepaper\"\n                    element={\n                      <TerminalScreen>\n                        <Whitepaper />\n                      </TerminalScreen>\n                    }\n                  />\n                  <Route\n                    path=\"/home\"\n                    element={\n                      <TerminalScreen>\n                        <Home />\n                      </TerminalScreen>\n                    }\n                  />\n                  <Route\n                    path=\"/mint\"\n                    element={\n                      <TerminalScreen>\n                        <Mint />\n                      </TerminalScreen>\n                    }\n                  />\n                  <Route\n                    path=\"/\"\n                    element={\n                      isBrowser ? (\n                        <App3D />\n                      ) : (\n                        <TerminalScreen>\n                          <Whitepaper />\n                        </TerminalScreen>\n                      )\n                    }\n                  />\n                </Routes>\n              )}\n            </>\n          )}\n        </Web3Context.Provider>\n      </>\n    </div>\n  );\n}\n\nfunction MyApp() {\n  return (\n    <div id={\"app\"} className=\"app2d\">\n      <Router>\n        {/* <ChakraProvider> */}\n        <App />\n        {/* </ChakraProvider> */}\n      </Router>\n    </div>\n  );\n}\n\nexport default MyApp;\n","/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/src/reportWebVitals.js",[],"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/src/App3D.js",[],"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/src/contexts/Web3Context.js",[],"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/src/Pages/Home.js",["170","171","172","173","174","175","176","177","178","179"],"import { Center, Heading, Text } from \"@chakra-ui/react\";\nimport { useContext, useEffect, useState } from \"react\";\nimport Panel from \"../components/Panel\";\nimport { SunkenInput, SunkenTextArea } from \"../components/SunkenInput\";\nimport { WidthContainer } from \"../components/WidthContainer\";\nimport TypeAnimation from \"react-type-animation\";\nimport useKeyPress from \"../components/useKeyPress\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Web3Context } from \"../contexts/Web3Context\";\n\nexport default function Home() {\n  const navigate = useNavigate();\n  const mKey = useKeyPress(\"m\");\n  const tKey = useKeyPress(\"t\");\n  const { account } = useContext(Web3Context);\n  const [tweetMessage, setTweetMessage] = useState(\"\");\n\n  useEffect(() => {\n    if (mKey) {\n      navigate(\"/mint\");\n    }\n  }, [mKey]);\n\n  useEffect(() => {\n    if (tKey) {\n      navigate(\"/tweet\");\n    }\n  }, [tKey]);\n\n  return (\n    <>\n      <WidthContainer>\n        <div style={{ textAlign: \"left\" }}>\n          <pre>\n            <output>\n              <TypeAnimation\n                cursor={false}\n                sequence={[\"LFG CyberDeck\"]}\n                wrapper=\"h2\"\n              />\n              <TypeAnimation cursor={false} sequence={[account]} wrapper=\"p\" />\n              <TypeAnimation cursor={false} sequence={[\" \"]} wrapper=\"p\" />\n              <TypeAnimation\n                cursor={false}\n                sequence={[500, \"Commands: \"]}\n                wrapper=\"p\"\n              />\n              <TypeAnimation\n                cursor={false}\n                sequence={[1000, \"Press 'M' to Mint a CyberDeck\"]}\n                wrapper=\"p\"\n              />\n              <TypeAnimation\n                cursor={true}\n                sequence={[2000, \"Press 'T' to Tweet from PrimevalDao\"]}\n                wrapper=\"p\"\n              />\n            </output>\n          </pre>\n        </div>\n      </WidthContainer>\n    </>\n  );\n}\n","/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/src/components/useKeyPress.js",["180"],"const { useEffect, useState } = require(\"react\");\n\n// Hook\nexport default function useKeyPress(targetKey) {\n  // State for keeping track of whether key is pressed\n  const [keyPressed, setKeyPressed] = useState(false);\n  // If pressed key is our target key then set to true\n  function downHandler({ key }) {\n    if (key === targetKey) {\n      setKeyPressed(true);\n    }\n  }\n  // If released key is our target key then set to false\n  const upHandler = ({ key }) => {\n    if (key === targetKey) {\n      setKeyPressed(false);\n    }\n  };\n  // Add event listeners\n  useEffect(() => {\n    window.addEventListener(\"keydown\", downHandler);\n    window.addEventListener(\"keyup\", upHandler);\n    // Remove event listeners on cleanup\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  }, []); // Empty array ensures that effect is only run on mount and unmount\n  return keyPressed;\n}\n","/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/src/components/ConnectWalletScreen.js",["181","182","183"],"import { useContext, useEffect } from \"react\";\nimport { Web3Context } from \"../contexts/Web3Context\";\nimport TypeAnimation from \"react-type-animation\";\nimport { WidthContainer } from \"./WidthContainer\";\nimport useKeyPress from \"./useKeyPress\";\n\nexport default function ConnectWalletScreen() {\n  const keyPress = useKeyPress(\"l\");\n  const { account, setAccount, web3Handler } = useContext(Web3Context);\n  useEffect(() => {\n    if (keyPress) {\n      web3Handler();\n    }\n  }, [keyPress]);\n  return (\n    <WidthContainer>\n      <div style={{ textAlign: \"left\" }}>\n        {/* <input type=\"text\" onkeypress={web3Handler} /> */}\n        <pre>\n          <output>\n            <TypeAnimation\n              cursor={false}\n              sequence={[\"LFG CyberDeck\"]}\n              wrapper=\"h1\"\n            />\n            <TypeAnimation\n              cursor={true}\n              sequence={[\"Press 'L' to connect wallet\"]}\n              wrapper=\"h2\"\n            />\n          </output>\n        </pre>\n      </div>\n    </WidthContainer>\n  );\n}\n","/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/src/components/WidthContainer.js",["184","185","186"],"import React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport {\n  BrowserView,\n  MobileView,\n  isBrowser,\n  isMobile,\n} from \"react-device-detect\";\n\nconst WidthContainerWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  min-height: 100vh;\n`;\n\nconst WidthContainerCenter = styled.div`\n  width: 45%;\n\n  @media (max-width: 1024px) {\n    width: 45%;\n  }\n`;\n\nconst MobileContainerCenter = styled.div`\n  width: 90%;\n`;\n\nexport const WidthContainer = (props) => {\n  return (\n    <>\n      <BrowserView>\n        <WidthContainerWrapper>\n          <WidthContainerCenter>{props.children}</WidthContainerCenter>\n        </WidthContainerWrapper>\n      </BrowserView>\n      <MobileView>\n        <WidthContainerWrapper>\n          <MobileContainerCenter>{props.children}</MobileContainerCenter>\n        </WidthContainerWrapper>\n      </MobileView>\n    </>\n  );\n};\n","/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/src/utils/errorParser.js",[],"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/src/Pages/Mint.js",["187","188","189","190","191","192","193","194","195","196","197","198"],"import { Center, Heading, Text } from \"@chakra-ui/react\";\nimport { useContext, useEffect, useState } from \"react\";\nimport Panel from \"../components/Panel\";\nimport { SunkenInput, SunkenTextArea } from \"../components/SunkenInput\";\nimport { WidthContainer } from \"../components/WidthContainer\";\nimport TypeAnimation from \"react-type-animation\";\nimport useKeyPress from \"../components/useKeyPress\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Web3Context } from \"../contexts/Web3Context\";\nimport ComputerModel from \"../components/RoomScene/ComputerModel\";\nimport VertArrowScrollList from \"../components/VertArrowScrollList\";\nimport ScrollListItem from \"../components/ScrollListItem\";\n\nfunction isUsedNft({ cyberDeckNfts, address, tokenId }) {\n  for (const c of cyberDeckNfts) {\n    if (\n      c.tokenData.parentTokenAddress === address &&\n      c.tokenData.parentTokenId.toString() === tokenId.toString()\n    ) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction filterNFTS({ cyberDeckNfts, allowedNfts }) {\n  let nonUsed = [];\n  for (const a of allowedNfts) {\n    const { tokenId, address } = a;\n    const isUsed = isUsedNft({\n      cyberDeckNfts: cyberDeckNfts,\n      address: address,\n      tokenId: tokenId,\n    });\n    if (!isUsed) {\n      nonUsed.push(a);\n    }\n  }\n  return nonUsed;\n}\n\nexport default function Mint() {\n  const { mintNFTHandler, ownedAllowedNfts, ownedTokens } =\n    useContext(Web3Context);\n  const navigate = useNavigate();\n  const mKey = useKeyPress(\"m\");\n  const { account } = useContext(Web3Context);\n  const [tweetMessage, setTweetMessage] = useState(\"\");\n  const [selection, setSelection] = useState(ownedAllowedNfts[0]);\n  const [currentlyMinting, setCurrentlyMinting] = useState(false);\n  const [nonUsedNFTs, setNonUsedNFTS] = useState(\n    filterNFTS({ cyberDeckNfts: ownedTokens, allowedNfts: ownedAllowedNfts })\n  );\n\n  async function mint() {\n    if (ownedAllowedNfts.length > 0) {\n      setCurrentlyMinting(true);\n      mintNFTHandler({\n        tokenAddress: selection.address,\n        tokenId: selection.tokenId,\n      });\n      setCurrentlyMinting(false);\n    }\n  }\n\n  useEffect(() => {\n    if (mKey) {\n      if (!currentlyMinting) {\n        mint();\n      }\n    }\n  }, [mKey]);\n\n  useEffect(() => {\n    setNonUsedNFTS(\n      filterNFTS({ cyberDeckNfts: ownedTokens, allowedNfts: ownedAllowedNfts })\n    );\n  }, [ownedTokens, ownedAllowedNfts]);\n\n  return (\n    <>\n      <WidthContainer>\n        <div style={{ textAlign: \"left\" }}>\n          <pre>\n            <output>\n              <TypeAnimation\n                cursor={false}\n                sequence={[\"LFG CyberDeck\"]}\n                wrapper=\"h2\"\n              />\n              <TypeAnimation cursor={false} sequence={[account]} wrapper=\"p\" />\n              <TypeAnimation cursor={false} sequence={[\" \"]} wrapper=\"p\" />\n              <TypeAnimation\n                cursor={false}\n                sequence={[\n                  500,\n                  \"Mint your own CyberDeck to gain access to Web3 through your legacy NFT.\",\n                ]}\n                wrapper=\"p\"\n              />\n              <ComputerModel />\n              <TypeAnimation\n                cursor={false}\n                sequence={[\n                  `Press 'M' to Mint a 1,000 ETH CyberDeck for ${selection.name} #${selection.tokenId}`,\n                ]}\n                wrapper=\"p\"\n              />\n              <div>{`Valid NFT's (${nonUsedNFTs.length}) - Use W and S to navigate`}</div>\n\n              <VertArrowScrollList\n                items={nonUsedNFTs}\n                ListItemComponent={ScrollListItem}\n                setSelection={setSelection}\n              />\n            </output>\n          </pre>\n        </div>\n      </WidthContainer>\n    </>\n  );\n}\n\nfunction SelectionStage({}) {\n  return (\n    <div>\n      <VertArrowScrollList />\n    </div>\n  );\n}\n","/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/src/components/RoomScene/RoomSceneLoader.js",["199","200","201","202","203","204"],"import { useEffect } from \"react\";\nimport * as THREE from \"three\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader.js\";\nimport { CSS3DObject } from \"three/examples/jsm/renderers/CSS3DRenderer.js\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport MyApp from \"../../App\";\n\nexport default function RoomSceneLoader({\n  glbUrl,\n  size,\n  localScale,\n  id,\n  clearColor,\n  isWireframe,\n  hasShadow,\n  appId,\n}) {\n  function setupModel(data) {\n    const model = data.scene.children[0];\n\n    return model;\n  }\n\n  async function runModel() {\n    var scene = new THREE.Scene();\n\n    // Load Camera Perspektive\n    var camera = new THREE.PerspectiveCamera(25, 400 / 400, 1, 5000);\n    camera.position.set(0.5, 2, 25);\n\n    // Load a Renderer\n    var renderer = new THREE.WebGLRenderer({ alpha: true });\n    // renderer.setClearColor(clearColor ? clearColor : 0x000000);\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(size, size);\n    var container = document.getElementById(id);\n\n    container.appendChild(renderer.domElement);\n\n    // var object = new CSS3DObject(<MyApp />);\n\n    // object.lookAt(camera.position);\n    // scene.add(object);\n\n    // Load the Orbitcontroller\n    // var controls = new OrbitControls(camera, renderer.domElement);\n    // scene.add(new THREE.AxesHelper(500));\n    // Load Light\n    var hemiLight = new THREE.HemisphereLight(0xffeeb1, 0x080820, 4);\n    scene.add(hemiLight);\n    renderer.toneMapping = THREE.ReinhardToneMapping;\n    renderer.toneMappingExposure = 2.3;\n    renderer.shadowMap.enabled = true;\n    // var ambientLight = new THREE.AmbientLight(0xcccccc);\n    // scene.add(ambientLight);\n\n    // var directionalLight = new THREE.DirectionalLight(0xffffff);\n    // directionalLight.position.set(0, 1, 1).normalize();\n    // scene.add(directionalLight);\n    let spotlight = new THREE.SpotLight(0xffa95c, 4);\n    spotlight.castShadow = true;\n    spotlight.shadow.bias = -0.0001;\n    spotlight.shadow.mapSize.width = 1024 * 4;\n    spotlight.shadow.mapSize.height = 1024 * 4;\n\n    scene.add(spotlight);\n    var loader = new GLTFLoader();\n    loader.load(glbUrl, function (gltf) {\n      var object = gltf.scene;\n\n      gltf.scene.scale.set(localScale, localScale, localScale);\n      gltf.scene.position.x = 0; //Position (x = right+ left-)\n      gltf.scene.position.y = 0; //Position (y = up+, down-)\n      gltf.scene.position.z = 0; //Position (z = front +, back-)\n      gltf.scene.rotation.y = 3.14159265358979323846264338327950288419;\n      gltf.scene.traverse((n) => {\n        if (n.isMesh) {\n          if (hasShadow) {\n            n.castShadow = true;\n            n.receiveShadow = true;\n          }\n          if (isWireframe) {\n            n.material.wireframe = true;\n            n.material.color.setHex(0xffffff);\n          }\n          if (n.material.map) {\n            n.material.map.anisotropy = 16;\n          }\n        }\n      });\n      // var geo = new THREE.EdgesGeometry(gltf.scene); // or WireframeGeometry( geometry )\n\n      // var mat = new THREE.LineBasicMaterial({ color: 0xffffff, linewidth: 2 });\n\n      // var wireframe = new THREE.LineSegments(geo, mat);\n\n      // scene.add(wireframe);\n      scene.add(gltf.scene);\n    });\n\n    function animate() {\n      render();\n      //   scene.rotation.y += 0.005;\n      spotlight.position.set(\n        camera.position.x + 10,\n        camera.position.y + 10,\n        camera.position.z + 10\n      );\n      requestAnimationFrame(animate);\n    }\n\n    function render() {\n      renderer.render(scene, camera);\n    }\n\n    render();\n    animate();\n  }\n\n  useEffect(() => {\n    runModel();\n  }, []);\n  return <div />;\n}\n","/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/src/Pages/Whitepaper.js",["205","206"],"import ComputerModel from \"../components/RoomScene/ComputerModel\";\nimport WhitePaperBody from \"../components/Whitepaper/WhitePaperBody\";\n\nexport default function Whitepaper({}) {\n  return (\n    <div className=\"whitepaper\">\n      <WhitePaperBody />\n    </div>\n  );\n}\n","/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/src/components/TerminalScreen.js",[],"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/src/components/BootupScreen.js",["207","208","209"],"import TypeAnimation from \"react-type-animation\";\nimport { WidthContainer } from \"./WidthContainer\";\nimport {\n  BrowserView,\n  MobileView,\n  isBrowser,\n  isMobile,\n} from \"react-device-detect\";\n\nexport default function BootupScreen({\n  isLoadingCyberdeck,\n  isLoadingUserTokens,\n  isLoadingInitialData,\n  account,\n}) {\n  return (\n    <div>\n      {isBrowser ? (\n        <>\n          <WidthContainer>\n            <div style={{ textAlign: \"left\" }}>\n              <pre>\n                <output>\n                  <TypeAnimation\n                    cursor={!isLoadingCyberdeck}\n                    sequence={[\"Booting LFG CyberDeck...\"]}\n                    wrapper=\"h2\"\n                  />\n                  <TypeAnimation\n                    cursor={false}\n                    sequence={[500, account]}\n                    wrapper=\"p\"\n                  />\n                  {isLoadingCyberdeck && (\n                    <TypeAnimation\n                      cursor={false}\n                      sequence={[1000, \"Initializing Firmware...\"]}\n                      wrapper=\"p\"\n                    />\n                  )}\n                  {isLoadingUserTokens && (\n                    <TypeAnimation\n                      cursor={false}\n                      sequence={[1500, \"Fetching User Inventory...\"]}\n                      wrapper=\"p\"\n                    />\n                  )}\n                  {!isLoadingInitialData && (\n                    <TypeAnimation\n                      cursor={!isLoadingInitialData}\n                      sequence={[2000, \"Press 'C' to clear console\"]}\n                      wrapper=\"p\"\n                    />\n                  )}\n                </output>\n              </pre>\n            </div>\n          </WidthContainer>\n        </>\n      ) : (\n        <>\n          <WidthContainer>\n            <div style={{ textAlign: \"left\" }}>\n              <pre>\n                <output>\n                  <TypeAnimation\n                    cursor={!isLoadingCyberdeck}\n                    sequence={[\"Booting LFG CyberDeck...\"]}\n                    wrapper=\"h2\"\n                  />\n                  <TypeAnimation\n                    cursor={false}\n                    sequence={[500, account]}\n                    wrapper=\"p\"\n                  />\n                  {isLoadingCyberdeck && (\n                    <TypeAnimation\n                      cursor={false}\n                      sequence={[1000, \"Initializing Firmware...\"]}\n                      wrapper=\"p\"\n                    />\n                  )}\n                  {isLoadingUserTokens && (\n                    <TypeAnimation\n                      cursor={false}\n                      sequence={[1500, \"Fetching User Inventory...\"]}\n                      wrapper=\"p\"\n                    />\n                  )}\n                  {!isLoadingInitialData && (\n                    <TypeAnimation\n                      cursor={!isLoadingInitialData}\n                      sequence={[2000, \"Tap to clear console\"]}\n                      wrapper=\"p\"\n                    />\n                  )}\n                </output>\n              </pre>\n            </div>\n          </WidthContainer>\n        </>\n      )}\n    </div>\n  );\n}\n","/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/src/components/RoomScene/RoomScene.js",["210","211","212","213","214","215","216"],"import { Suspense, useEffect, useRef } from \"react\";\nimport * as THREE from \"three/src/Three\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\n\nimport { Canvas, useFrame, useLoader } from \"@react-three/fiber\";\nimport {\n  useGLTF,\n  PresentationControls,\n  Environment,\n  ContactShadows,\n  Html,\n  useFBX,\n  useHelper,\n} from \"@react-three/drei\";\nimport MyApp from \"../../App\";\nimport StarterScreen from \"../StarterScreen\";\nimport useKeyPress from \"../useKeyPress\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport EditedScene from \"./EditedScene\";\n\nfunction SceneSpotlight() {\n  const light = useRef();\n  useHelper(light, THREE.SpotLightHelper, \"cyan\");\n  return (\n    <group>\n      <spotLight\n        ref={light}\n        color={\"#8800ff\"}\n        position={[0.1, 0.3, 0.3]}\n        angle={30}\n        penumbra={1}\n        castShadow\n        shadow-mapSize={[512, 512]}\n        shadowBias={-0.002}\n        shadowCameraNear={1}\n        shadowCameraFar={4}\n        intensity={2}\n      />\n    </group>\n  );\n}\n\nfunction RectLight({ position }) {\n  const light = useRef();\n  // useHelper(light, THREE.RectAreaLight, \"red\");\n  return (\n    <group>\n      <rectAreaLight\n        color={\"#0000ff\"}\n        width={1}\n        height={1}\n        ref={light}\n        position={[0.2, 0, 0.1]}\n        intensity={0.5}\n      />\n    </group>\n  );\n}\n\nexport default function RoomScene() {\n  const navigate = useNavigate();\n  const l = useKeyPress(\"l\");\n  const f = useKeyPress(\"f\");\n  const g = useKeyPress(\"g\");\n  const light = useRef();\n\n  useEffect(() => {\n    if (l && f && g) {\n      navigate(\"/whitepaper\");\n    }\n  }, [l, f, g]);\n  return (\n    <Suspense fallback={<div>:)</div>}>\n      <Canvas shadows dpr={[4, 3]} camera={{ position: [0, 0, 0], fov: 50 }}>\n        {/* <ambientLight intensity={0.5} /> */}\n\n        <PresentationControls\n          global\n          config={{ mass: 2, tension: 500 }}\n          // snap={{ mass: 4, tension: 1500 }}\n          rotation={[0, 0, 0]}\n          // polar={[-Math.PI / 3, Math.PI / 3]}\n          // azimuth={[-Math.PI / 1.4, Math.PI / 2]}\n          polar={[-Math.PI, Math.PI]}\n          azimuth={[-Math.PI, Math.PI]}\n        >\n          {/* <RectLight /> */}\n          {/* <SceneSpotlight /> */}\n          {/* <spotLight\n            color={\"#8800ff\"}\n            position={[-0.53, 0.5, -0.64]}\n            angle={0.15}\n            penumbra={1}\n            shadow-mapSize={[512 * 32, 512 * 32]}\n            castShadow\n            ref={light}\n          /> */}\n          {/* <Html\n            scale={0.0055}\n            rotation={[0, 0, 0]}\n            position={[-0.085, 0, -0.2]}\n            transform\n            occlude\n          >\n            <MyApp />\n          </Html> */}\n          {/* <Html\n            scale={0.009}\n            rotation={[0, 0, 0]}\n            position={[-0.0695, 0.0375, -0.84]}\n            transform\n            occlude\n          >\n            <StarterScreen l={l} f={f} g={g} />\n          </Html> */}\n          {/* <Html\n            scale={0.0036}\n            rotation={[0, -Math.PI / 16, 0]}\n            position={[0.114, 0.0115, -0.31]}\n            transform\n            occlude\n          >\n            <div style={{}}>\n              <iframe\n                src=\"https://opensea.io/explore-collections?tab=top\"\n                title={\"display\"}\n                height={1000}\n                width={1000}\n              ></iframe>\n            </div>\n          </Html> */}\n          {/* <Model position={[0.25, -0.6, 0]} castShadow={true} /> */}\n          <Html\n            scale={0.0075}\n            rotation={[0, 0, 0]}\n            position={[-0.053, 0.075, -0.64]}\n            transform\n          >\n            <StarterScreen l={l} f={f} g={g} />\n          </Html>\n          {/* <RoomWithComputer position={[0.25, -0.6, 0]} castShadow={true} /> */}\n          {/* <LowPolyRoom /> */}\n          {/* <LowPolyRoom3 position={[0.42, -0.62, 0]} castShadow={true} /> */}\n          <EditedScene position={[0.42, -0.62, 0]} />\n          {/* <Watch rotation={[0, 0, 0]} position={[0.1, -0.2, 0]} scale={0.003} /> */}\n        </PresentationControls>\n        <ContactShadows\n          rotation-x={Math.PI / 2}\n          position={[0, -1.4, 0]}\n          opacity={0.75}\n          width={10}\n          height={10}\n          blur={2.6}\n          far={2}\n        />\n        <Environment preset=\"city\" />\n      </Canvas>\n    </Suspense>\n  );\n}\n\nfunction LowPolyRoom() {\n  const fbx = useFBX(\"/lowpolyroom1.fbx\");\n  return (\n    <mesh scale={1} position={[42, -62, 0]}>\n      <primitive object={fbx} dispose={null} />\n    </mesh>\n  );\n}\n\nfunction Watch(props) {\n  const ref = useRef();\n  const { scene } = useLoader(\n    GLTFLoader,\n    \"https://collectees.mypinata.cloud/ipfs/QmPj7tZRQrkbAish8c89hUYfXMzFWv33aguz3tuVWHhSLT/lowpolyroom1.glb\"\n  );\n  // const { nodes, materials, scene } = useGLTF(\n  //   \"https://collectees.mypinata.cloud/ipfs/QmdSrNvEvJ3aaqidmJsgerMZNfDwXH4PazqicSvANXriSS/computer.glb\"\n  // );\n  useFrame((state) => {\n    // const t = state.clock.getElapsedTime();\n    // ref.current.rotation.x = +Math.cos(t / 4) / 8;\n    // ref.current.rotation.y = Math.PI * 0.91 + Math.sin(t / 4) / 8;\n    // ref.current.rotation.z = (1 + Math.sin(t / 1.5)) / 20;\n    // ref.current.position.y = (1 + Math.sin(t / 1.5)) / 10;\n  });\n  // console.log(\"NODES: \", nodes);\n  // console.log(\"Materials: \", materials);\n\n  return (\n    <group ref={ref} {...props} dispose={null}>\n      {/* <mesh\n        geometry={nodes.Scene.children[0]}\n        material={materials.glass}\n      >\n        <Html\n          scale={100}\n          rotation={[Math.PI / 2, 0, 0]}\n          position={[180, -350, 50]}\n          transform\n          occlude\n        >\n          <div className=\"annotation\">\n            6.550 $ <span style={{ fontSize: \"1.5em\" }}>🥲</span>\n          </div>\n        </Html>\n      </mesh> */}\n      <primitive object={scene} scale={120} castShadow position={[0, -0, -0]}>\n        <Html\n          scale={0.0055}\n          rotation={[0, Math.PI, 0]}\n          position={[-0.085, 0.25, -0.02]}\n          transform\n          occlude\n        >\n          <MyApp />\n        </Html>\n      </primitive>\n      {/* <mesh\n        castShadow\n        receiveShadow\n        geometry={nodes.Scene.children[0].geometry}\n        material={materials.watch}\n      /> */}\n    </group>\n  );\n}\n","/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/src/components/SunkenInput.js",["217","218","219","220"],"import { Center, Input, Textarea } from \"@chakra-ui/react\";\nimport React, { useContext, useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport styled, { css } from \"styled-components\";\n\nconst SunkenInputWrapper = styled.div`\n  box-shadow: inset 2px 5px 20px black;\n  border-radius: 5px;\n  background: hsl(11, 49%, 11%);\n  padding: 4px;\n  color: white;\n`;\n\nexport const SunkenInput = ({ placeholder, value, setValue }) => {\n  return (\n    <div>\n      <SunkenInputWrapper>\n        <Center>\n          <Input\n            variant=\"unstyled\"\n            value={value}\n            placeholder={placeholder}\n            onChange={(e) => setValue(e.target.value)}\n          />\n        </Center>\n      </SunkenInputWrapper>\n    </div>\n  );\n};\n\nexport const SunkenTextArea = ({ placeholder, value, setValue }) => {\n  return (\n    <div>\n      <SunkenInputWrapper>\n        <Center>\n          <Textarea\n            variant=\"unstyled\"\n            value={value}\n            placeholder={placeholder}\n            onChange={(e) => setValue(e.target.value)}\n          />\n        </Center>\n      </SunkenInputWrapper>\n    </div>\n  );\n};\n","/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/src/components/Panel.js",["221","222"],"import topLeftTile from \"../b-top-left-tile.png\";\nimport topRightTile from \"../b-top-right-tile.png\";\nimport bottomLeftTile from \"../b-bottom-left-tile.png\";\nimport bottomRightTile from \"../b-bottom-right-tile.png\";\nimport leftTile from \"../b-left-tile.png\";\nimport rightTile from \"../b-right-tile.png\";\n\nexport default function Panel({ children }) {\n  return (\n    <div style={{ width: \"500px\" }}>\n      <TopPanel />\n      <div style={{ display: \"flex\", backgroundColor: \"#6e3f31\" }}>\n        <LeftPannel />\n        <div style={{ width: \"100%\" }}>{children}</div>\n        <RightPannel />\n      </div>\n\n      <BottomPanel />\n    </div>\n  );\n}\n\nfunction TopPanel() {\n  return (\n    <div style={{ display: \"flex\" }}>\n      <div>\n        <img src={topLeftTile} alt=\"top-left-corner\" />\n      </div>\n      <div className=\"b-top-tile\" style={{ width: \"100%\" }}></div>\n      <div>\n        <img src={topRightTile} alt=\"top-right-corner\" />\n      </div>\n    </div>\n  );\n}\n\nfunction BottomPanel() {\n  return (\n    <div style={{ display: \"flex\" }}>\n      <div>\n        <img src={bottomLeftTile} alt=\"bottom-left-corner\" />\n      </div>\n      <div className=\"b-bottom-tile\" style={{ width: \"100%\" }}></div>\n      <div>\n        <img src={bottomRightTile} alt=\"bottom-right-corner\" />\n      </div>\n    </div>\n  );\n}\n\nfunction LeftPannel() {\n  return <img className=\"b-left-tile\" src={leftTile} />;\n}\n\nfunction RightPannel() {\n  return <img className=\"b-right-tile\" src={rightTile} />;\n}\n","/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/src/components/RoomScene/ComputerModel.js",[],"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/src/components/VertArrowScrollList.js",["223","224"],"import { useEffect, useState } from \"react\";\nimport useKeyPress from \"./useKeyPress\";\n\nfunction shiftList(oldList, startIndex) {\n  let newList = [];\n  let ol = [...oldList];\n  let s =\n    startIndex < 0\n      ? (startIndex % oldList.length) + oldList.length\n      : startIndex;\n  for (let i = s; i < oldList.length + s; i++) {\n    let n = i % ol.length;\n    newList.push(ol[n]);\n  }\n  return newList;\n}\n\nexport default function VertArrowScrollList({\n  items,\n  ListItemComponent,\n  setSelection,\n}) {\n  const up = useKeyPress(\"w\");\n  const down = useKeyPress(\"s\");\n  const [selected, setSelected] = useState(0);\n  const [biteSized, setBiteSized] = useState([\n    ...shiftList(items, selected).slice(0, 3),\n  ]);\n\n  useEffect(() => {\n    if (up) {\n      if (items.length > 3) {\n        setBiteSized([...shiftList(items, selected - 1).slice(0, 3)]);\n        setSelection(items[(selected + items.length) % items.length]);\n        setSelected((selected - 1 + items.length) % items.length);\n      } else {\n        if (selected > 0) {\n          setSelection(items[selected - 1]);\n\n          setSelected(selected - 1);\n        }\n      }\n    }\n  }, [up]);\n\n  useEffect(() => {\n    if (down) {\n      // if (selected < items.length - 1) {\n      //   setSelected(selected + 1);\n      // }\n      if (items.length > 3) {\n        setBiteSized([...shiftList(items, selected + 1).slice(0, 3)]);\n        setSelection(items[(selected + 2) % items.length]);\n\n        setSelected((selected + 1) % items.length);\n      } else {\n        if (selected < items.length - 1) {\n          setSelection(items[selected + 1]);\n\n          setSelected(selected + 1);\n        }\n      }\n    }\n  }, [down]);\n\n  if (items.length < 4) {\n    return (\n      <>\n        {items.map((element, index) => (\n          <ListItemComponent\n            key={index}\n            index={index + 1}\n            item={element}\n            selected={index === selected}\n          />\n        ))}\n      </>\n    );\n  }\n\n  return (\n    <div className=\"scroll-list-wrapper\">\n      <div>...</div>\n      {[...biteSized].map((element, index) => (\n        <ListItemComponent\n          key={element.address + element.tokenId}\n          index={((selected + items.length + index) % items.length) + 1}\n          item={element}\n          selected={index === 1}\n        />\n      ))}\n      <div>...</div>\n    </div>\n  );\n}\n","/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/src/components/ScrollListItem.js",["225"],"import TypeAnimation from \"react-type-animation\";\n\nexport default function ScrollListItem({ item, index, selected }) {\n  let className = \"scroll-list-item\";\n  if (selected) {\n    className = \"scroll-list-item-selected\";\n  }\n  const { name, tokenId } = item;\n  return (\n    <div className={className}>\n      {(index ? index : 0).toString() +\n        \". \" +\n        name.toString() +\n        \" #\" +\n        tokenId.toString()}\n      {/* <TypeAnimation cursor={false} sequence={[item.toString()]} wrapper=\"p\" /> */}\n    </div>\n  );\n}\n","/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/src/components/Whitepaper/WhitePaperBody.js",["226","227","228","229","230"],"import { useEffect, useRef } from \"react\";\nimport useKeyPress from \"../useKeyPress\";\nimport { WidthContainer } from \"../WidthContainer\";\nimport wp from \"./Whitepaper.json\";\nimport WhitePaperPoint from \"./WhitePaperPoint\";\nimport WhitePaperPre from \"./WhitePaperPre\";\nimport WhitePaperSubtitle from \"./WhitePaperSubtitle\";\nimport WhitePaperText from \"./WhitePaperText\";\nimport WhitePaperTitle from \"./WhitePaperTitle\";\nimport ComputerModel from \"../RoomScene/ComputerModel\";\n\nconst o = `              \n    *((((((###         \n    **(((((((((##       \n    *(((((((((((###     \n   ,*(((((((((((((###   \n   ,(((((((((((((((((   \n  ,,((((((((((((((((((( \n ,,,,(((((((((((((///// \n   ,,((((((((((((((//// \n     ,,(((((((((((///// \n       ,,,,//////////// \n        ,,,,//.../////\n`;\n\nconst osLogo = `                 \n                ///                \n         ///////////////////        \n      /////////////////////////     \n    //////////////@@/////////////   \n  //////////////@@@@/////////////// \n ////////////@@//@@@@@@/////////////\n ///////////@@@@/@@@@@@@////////////\n//////////@@@@@//@@@@@@@////////////\n.///////////////@@@@@@@//////(//////\n ///////@@@@@@////@@///#@@@@////////\n  ///////@@@@@@@@@@@@@@@@@@//////// \n   ///////////////////////////////  \n     ///////////////////////////    \n       //////////////////////.      \n            /////////////           `;\n\nexport default function WhitePaperBody({}) {\n  const revealDuration = 0.5;\n  const duration = 1.5;\n  const isPlaying = true;\n  const down = useKeyPress(\"s\");\n  const up = useKeyPress(\"w\");\n\n  // const myRef = useRef();\n\n  // useEffect(() => {\n  //   const node = myRef.current;\n  //   const active = document.activeElement;\n  //   console.log(active.nextSibling);\n\n  //   if (down && active.nextSibling) {\n  //     console.log(\"down\");\n  //     active.nextSibling.focus();\n  //   }\n  //   if (up && active.previousSibling) {\n  //     active.previousSibling.focus();\n  //   }\n  // }, [up, down]);\n\n  return (\n    <>\n      <WidthContainer>\n        <div style={{ height: \"20px\" }}></div>\n\n        <WhitePaperTitle\n          characters={wp[\"1-title\"]}\n          revealDuration={revealDuration}\n          duration={duration}\n          isPlaying={isPlaying}\n        />\n        <WhitePaperText\n          characters={wp[\"2-paragraph\"]}\n          revealDuration={revealDuration}\n          duration={duration}\n          isPlaying={isPlaying}\n        />\n        <WhitePaperPre\n          characters={o}\n          revealDuration={revealDuration}\n          duration={duration}\n          isPlaying={isPlaying}\n        />\n        <div style={{ height: \"20px\" }}></div>\n        <WhitePaperText\n          characters={wp[\"4-paragraph\"]}\n          revealDuration={revealDuration}\n          duration={duration}\n          isPlaying={isPlaying}\n        />\n        <WhitePaperSubtitle\n          characters={wp[\"5-title\"]}\n          revealDuration={revealDuration}\n          duration={duration}\n          isPlaying={isPlaying}\n        />\n        <WhitePaperText\n          characters={wp[\"6-paragraph\"]}\n          revealDuration={revealDuration}\n          duration={duration}\n          isPlaying={isPlaying}\n        />\n        <WhitePaperPre\n          characters={osLogo}\n          revealDuration={revealDuration}\n          duration={duration}\n          isPlaying={isPlaying}\n        />\n        <WhitePaperText\n          characters={wp[\"8-paragraph\"]}\n          revealDuration={revealDuration}\n          duration={duration}\n          isPlaying={isPlaying}\n        />\n        <WhitePaperText\n          characters={wp[\"9-paragraph\"]}\n          revealDuration={revealDuration}\n          duration={duration}\n          isPlaying={isPlaying}\n        />\n        <WhitePaperText\n          characters={wp[\"10-paragraph\"]}\n          revealDuration={revealDuration}\n          duration={duration}\n          isPlaying={isPlaying}\n        />\n        <WhitePaperText\n          characters={wp[\"11-paragraph\"]}\n          revealDuration={revealDuration}\n          duration={duration}\n          isPlaying={isPlaying}\n        />\n        <WhitePaperSubtitle\n          characters={wp[\"12-title\"]}\n          revealDuration={revealDuration}\n          duration={duration}\n          isPlaying={isPlaying}\n        />\n        <ComputerModel />\n        <WhitePaperText\n          characters={wp[\"13-paragraph\"]}\n          revealDuration={revealDuration}\n          duration={duration}\n          isPlaying={isPlaying}\n        />\n        <WhitePaperSubtitle\n          characters={wp[\"14-title\"]}\n          revealDuration={revealDuration}\n          duration={duration}\n          isPlaying={isPlaying}\n        />\n        <WhitePaperText\n          characters={wp[\"15-paragraph\"]}\n          revealDuration={revealDuration}\n          duration={duration}\n          isPlaying={isPlaying}\n        />\n        <WhitePaperSubtitle\n          characters={wp[\"16-title\"]}\n          revealDuration={revealDuration}\n          duration={duration}\n          isPlaying={isPlaying}\n        />\n        <WhitePaperText\n          characters={wp[\"17-paragraph\"]}\n          revealDuration={revealDuration}\n          duration={duration}\n          isPlaying={isPlaying}\n        />\n        <WhitePaperPoint\n          characters={wp[\"18-paragraph\"]}\n          revealDuration={revealDuration}\n          duration={duration}\n          isPlaying={isPlaying}\n        />\n        <WhitePaperPoint\n          characters={wp[\"19-paragraph\"]}\n          revealDuration={revealDuration}\n          duration={duration}\n          isPlaying={isPlaying}\n        />\n        <WhitePaperPoint\n          characters={wp[\"20-paragraph\"]}\n          revealDuration={revealDuration}\n          duration={duration}\n          isPlaying={isPlaying}\n        />\n        <WhitePaperPoint\n          characters={wp[\"21-paragraph\"]}\n          revealDuration={revealDuration}\n          duration={duration}\n          isPlaying={isPlaying}\n        />\n        <WhitePaperText\n          characters={wp[\"22-paragraph\"]}\n          revealDuration={revealDuration}\n          duration={duration}\n          isPlaying={isPlaying}\n        />\n        <WhitePaperText\n          characters={wp[\"23-paragraph\"]}\n          revealDuration={revealDuration}\n          duration={duration}\n          isPlaying={isPlaying}\n        />\n        <WhitePaperPoint\n          characters={wp[\"24-paragraph\"]}\n          revealDuration={revealDuration}\n          duration={duration}\n          isPlaying={isPlaying}\n        />\n        <WhitePaperPoint\n          characters={wp[\"25-paragraph\"]}\n          revealDuration={revealDuration}\n          duration={duration}\n          isPlaying={isPlaying}\n        />\n        <WhitePaperPoint\n          characters={wp[\"26-paragraph\"]}\n          revealDuration={revealDuration}\n          duration={duration}\n          isPlaying={isPlaying}\n        />\n        <WhitePaperPoint\n          characters={wp[\"27-paragraph\"]}\n          revealDuration={revealDuration}\n          duration={duration}\n          isPlaying={isPlaying}\n        />\n        <WhitePaperPoint\n          characters={wp[\"28-paragraph\"]}\n          revealDuration={revealDuration}\n          duration={duration}\n          isPlaying={isPlaying}\n        />\n        <WhitePaperPoint\n          characters={wp[\"29-paragraph\"]}\n          revealDuration={revealDuration}\n          duration={duration}\n          isPlaying={isPlaying}\n        />\n        <WhitePaperPoint\n          characters={wp[\"30-paragraph\"]}\n          revealDuration={revealDuration}\n          duration={duration}\n          isPlaying={isPlaying}\n        />\n        <WhitePaperPoint\n          characters={wp[\"31-paragraph\"]}\n          revealDuration={revealDuration}\n          duration={duration}\n          isPlaying={isPlaying}\n        />\n        <WhitePaperPoint\n          characters={wp[\"32-paragraph\"]}\n          revealDuration={revealDuration}\n          duration={duration}\n          isPlaying={isPlaying}\n        />\n        <WhitePaperPoint\n          characters={wp[\"33-paragraph\"]}\n          revealDuration={revealDuration}\n          duration={duration}\n          isPlaying={isPlaying}\n        />\n        <WhitePaperPoint\n          characters={wp[\"34-paragraph\"]}\n          revealDuration={revealDuration}\n          duration={duration}\n          isPlaying={isPlaying}\n        />\n        <WhitePaperText\n          characters={wp[\"35-paragraph\"]}\n          revealDuration={revealDuration}\n          duration={duration}\n          isPlaying={isPlaying}\n        />\n        <WhitePaperText\n          characters={wp[\"36-paragraph\"]}\n          revealDuration={revealDuration}\n          duration={duration}\n          isPlaying={isPlaying}\n        />\n        <WhitePaperText\n          characters={wp[\"37-paragraph\"]}\n          revealDuration={revealDuration}\n          duration={duration}\n          isPlaying={isPlaying}\n        />\n        <WhitePaperSubtitle\n          characters={wp[\"38-subtitle\"]}\n          revealDuration={revealDuration}\n          duration={duration}\n          isPlaying={isPlaying}\n        />\n        <WhitePaperText\n          characters={wp[\"39-paragraph\"]}\n          revealDuration={revealDuration}\n          duration={duration}\n          isPlaying={isPlaying}\n        />\n        <WhitePaperPoint\n          characters={wp[\"40-point\"]}\n          revealDuration={revealDuration}\n          duration={duration}\n          isPlaying={isPlaying}\n        />\n        <WhitePaperPoint\n          characters={wp[\"41-point\"]}\n          revealDuration={revealDuration}\n          duration={duration}\n          isPlaying={isPlaying}\n        />\n        <WhitePaperPoint\n          characters={wp[\"42-point\"]}\n          revealDuration={revealDuration}\n          duration={duration}\n          isPlaying={isPlaying}\n        />\n        <WhitePaperPoint\n          characters={wp[\"43-point\"]}\n          revealDuration={revealDuration}\n          duration={duration}\n          isPlaying={isPlaying}\n        />\n        <WhitePaperPoint\n          characters={wp[\"44-point\"]}\n          revealDuration={revealDuration}\n          duration={duration}\n          isPlaying={isPlaying}\n        />\n        <WhitePaperText\n          characters={wp[\"45-paragraph\"]}\n          revealDuration={revealDuration}\n          duration={duration}\n          isPlaying={isPlaying}\n        />\n        <WhitePaperText\n          characters={wp[\"46-paragraph\"]}\n          revealDuration={revealDuration}\n          duration={duration}\n          isPlaying={isPlaying}\n        />\n        <WhitePaperText\n          characters={wp[\"47-paragraph\"]}\n          revealDuration={revealDuration}\n          duration={duration}\n          isPlaying={isPlaying}\n        />\n        <WhitePaperText\n          characters={wp[\"48-paragraph\"]}\n          revealDuration={revealDuration}\n          duration={duration}\n          isPlaying={isPlaying}\n        />\n        <WhitePaperSubtitle\n          characters={wp[\"49-title\"]}\n          revealDuration={revealDuration}\n          duration={duration}\n          isPlaying={isPlaying}\n        />\n        <WhitePaperText\n          characters={wp[\"50-paragraph\"]}\n          revealDuration={revealDuration}\n          duration={duration}\n          isPlaying={isPlaying}\n        />\n        <WhitePaperSubtitle\n          characters={wp[\"51-subtitle\"]}\n          revealDuration={revealDuration}\n          duration={duration}\n          isPlaying={isPlaying}\n        />\n        <WhitePaperText\n          characters={wp[\"53-paragraph\"]}\n          revealDuration={revealDuration}\n          duration={duration}\n          isPlaying={isPlaying}\n        />\n        <WhitePaperText\n          characters={wp[\"54-paragraph\"]}\n          revealDuration={revealDuration}\n          duration={duration}\n          isPlaying={isPlaying}\n        />\n        <WhitePaperText\n          characters={wp[\"55-paragraph\"]}\n          revealDuration={revealDuration}\n          duration={duration}\n          isPlaying={isPlaying}\n        />\n        <WhitePaperText\n          characters={wp[\"56-paragraph\"]}\n          revealDuration={revealDuration}\n          duration={duration}\n          isPlaying={isPlaying}\n        />\n        <WhitePaperSubtitle\n          characters={wp[\"57-subtitle\"]}\n          revealDuration={revealDuration}\n          duration={duration}\n          isPlaying={isPlaying}\n        />\n        <WhitePaperText\n          characters={wp[\"58-paragraph\"]}\n          revealDuration={revealDuration}\n          duration={duration}\n          isPlaying={isPlaying}\n        />\n        <WhitePaperText\n          characters={wp[\"59-paragraph\"]}\n          revealDuration={revealDuration}\n          duration={duration}\n          isPlaying={isPlaying}\n        />\n        <WhitePaperText\n          characters={wp[\"61-paragraph\"]}\n          revealDuration={revealDuration}\n          duration={duration}\n          isPlaying={isPlaying}\n        />\n        <WhitePaperSubtitle\n          characters={wp[\"66-subtitle\"]}\n          revealDuration={revealDuration}\n          duration={duration}\n          isPlaying={isPlaying}\n        />\n        <WhitePaperText\n          characters={wp[\"67-paragraph\"]}\n          revealDuration={revealDuration}\n          duration={duration}\n          isPlaying={isPlaying}\n        />\n        <div style={{ padding: \"84px\" }}></div>\n      </WidthContainer>\n    </>\n  );\n}\n","/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/src/components/StarterScreen.js",["231","232","233"],"import { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport useKeyPress from \"./useKeyPress\";\n\nexport default function StarterScreen({ l, f, g }) {\n  return (\n    <div className=\"starter-screen\">\n      <div\n        style={{\n          width: \"100%\",\n          height: \"100%\",\n          display: \"flex\",\n          flexFlow: \"column\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <div style={{ fontSize: \"148px\", textAlign: \"center\" }}>\n          Legacy of Forgotten Gems\n        </div>\n        <div style={{ fontSize: \"80px\", padding: \"24px\" }}>\n          Hold \"LFG\" to continue\n        </div>\n        <div\n          style={{\n            fontSize: \"100px\",\n            display: \"flex\",\n            justifyContent: \"space-around\",\n            // textDecoration: \"underline\",\n            width: \"30%\",\n          }}\n        >\n          <div>{l ? \"L\" : \"_\"}</div>\n          <div>{f ? \"F\" : \"_\"}</div>\n          <div>{g ? \"G\" : \"_\"}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/src/components/RoomScene/GLBModelViewer.js",["234","235","236","237"],"import { useEffect } from \"react\";\nimport * as THREE from \"three\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader.js\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\n\nexport default function GLBModelViewer({\n  glbUrl,\n  size,\n  localScale,\n  id,\n  clearColor,\n  isWireframe,\n  hasShadow,\n}) {\n  function setupModel(data) {\n    const model = data.scene.children[0];\n\n    return model;\n  }\n\n  async function runModel() {\n    var scene = new THREE.Scene();\n\n    // Load Camera Perspektive\n    var camera = new THREE.PerspectiveCamera(25, 400 / 400, 1, 5000);\n    camera.position.set(0.5, 2, 25);\n\n    // Load a Renderer\n    var renderer = new THREE.WebGLRenderer({ alpha: true });\n    // renderer.setClearColor(clearColor ? clearColor : 0x000000);\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(size, size);\n    var container = document.getElementById(id);\n\n    container.appendChild(renderer.domElement);\n\n    // Load the Orbitcontroller\n    // var controls = new OrbitControls(camera, renderer.domElement);\n    // scene.add(new THREE.AxesHelper(500));\n    // Load Light\n    var hemiLight = new THREE.HemisphereLight(0xffeeb1, 0x080820, 4);\n    scene.add(hemiLight);\n    renderer.toneMapping = THREE.ReinhardToneMapping;\n    renderer.toneMappingExposure = 2.3;\n    renderer.shadowMap.enabled = true;\n    // var ambientLight = new THREE.AmbientLight(0xcccccc);\n    // scene.add(ambientLight);\n\n    // var directionalLight = new THREE.DirectionalLight(0xffffff);\n    // directionalLight.position.set(0, 1, 1).normalize();\n    // scene.add(directionalLight);\n    let spotlight = new THREE.SpotLight(0xffa95c, 4);\n    spotlight.castShadow = true;\n    spotlight.shadow.bias = -0.0001;\n    spotlight.shadow.mapSize.width = 1024 * 4;\n    spotlight.shadow.mapSize.height = 1024 * 4;\n\n    scene.add(spotlight);\n    var loader = new GLTFLoader();\n    loader.load(glbUrl, function (gltf) {\n      var object = gltf.scene;\n\n      gltf.scene.scale.set(localScale, localScale, localScale);\n      gltf.scene.position.x = 0; //Position (x = right+ left-)\n      gltf.scene.position.y = 0; //Position (y = up+, down-)\n      gltf.scene.position.z = 0; //Position (z = front +, back-)\n      gltf.scene.rotation.y = 3.14159265358979323846264338327950288419;\n      gltf.scene.traverse((n) => {\n        if (n.isMesh) {\n          if (hasShadow) {\n            n.castShadow = true;\n            n.receiveShadow = true;\n          }\n          if (isWireframe) {\n            n.material.wireframe = true;\n            n.material.color.setHex(0xffffff);\n          }\n          if (n.material.map) {\n            n.material.map.anisotropy = 16;\n          }\n        }\n      });\n      // var geo = new THREE.EdgesGeometry(gltf.scene); // or WireframeGeometry( geometry )\n\n      // var mat = new THREE.LineBasicMaterial({ color: 0xffffff, linewidth: 2 });\n\n      // var wireframe = new THREE.LineSegments(geo, mat);\n\n      // scene.add(wireframe);\n      scene.add(gltf.scene);\n    });\n\n    function animate() {\n      render();\n      scene.rotation.y += 0.005;\n      spotlight.position.set(\n        camera.position.x + 10,\n        camera.position.y + 10,\n        camera.position.z + 10\n      );\n      requestAnimationFrame(animate);\n    }\n\n    function render() {\n      renderer.render(scene, camera);\n    }\n\n    render();\n    animate();\n  }\n\n  useEffect(() => {\n    runModel();\n  }, []);\n  return <div />;\n}\n","/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/src/components/Whitepaper/WhitePaperPoint.js",[],"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/src/components/Whitepaper/WhitePaperTitle.js",[],"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/src/components/Whitepaper/WhitePaperPre.js",[],"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/src/components/Whitepaper/WhitePaperSubtitle.js",[],"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/src/components/Whitepaper/WhitePaperText.js",[],"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/src/components/RoomScene/EditedScene.js",[],{"ruleId":"238","replacedBy":"239"},{"ruleId":"240","replacedBy":"241"},{"ruleId":"242","severity":1,"message":"243","line":2,"column":10,"nodeType":"244","messageId":"245","endLine":2,"endColumn":24},{"ruleId":"242","severity":1,"message":"246","line":8,"column":3,"nodeType":"244","messageId":"245","endLine":8,"endColumn":7},{"ruleId":"242","severity":1,"message":"247","line":21,"column":10,"nodeType":"244","messageId":"245","endLine":21,"endColumn":24},{"ruleId":"242","severity":1,"message":"248","line":26,"column":8,"nodeType":"244","messageId":"245","endLine":26,"endColumn":23},{"ruleId":"242","severity":1,"message":"249","line":31,"column":3,"nodeType":"244","messageId":"245","endLine":31,"endColumn":14},{"ruleId":"242","severity":1,"message":"250","line":32,"column":3,"nodeType":"244","messageId":"245","endLine":32,"endColumn":13},{"ruleId":"242","severity":1,"message":"251","line":44,"column":9,"nodeType":"244","messageId":"245","endLine":44,"endColumn":17},{"ruleId":"242","severity":1,"message":"252","line":48,"column":10,"nodeType":"244","messageId":"245","endLine":48,"endColumn":17},{"ruleId":"242","severity":1,"message":"253","line":49,"column":10,"nodeType":"244","messageId":"245","endLine":49,"endColumn":25},{"ruleId":"242","severity":1,"message":"254","line":50,"column":10,"nodeType":"244","messageId":"245","endLine":50,"endColumn":19},{"ruleId":"242","severity":1,"message":"255","line":50,"column":21,"nodeType":"244","messageId":"245","endLine":50,"endColumn":33},{"ruleId":"242","severity":1,"message":"256","line":52,"column":10,"nodeType":"244","messageId":"245","endLine":52,"endColumn":15},{"ruleId":"242","severity":1,"message":"257","line":54,"column":10,"nodeType":"244","messageId":"245","endLine":54,"endColumn":24},{"ruleId":"242","severity":1,"message":"258","line":57,"column":10,"nodeType":"244","messageId":"245","endLine":57,"endColumn":31},{"ruleId":"242","severity":1,"message":"259","line":60,"column":10,"nodeType":"244","messageId":"245","endLine":60,"endColumn":20},{"ruleId":"242","severity":1,"message":"260","line":64,"column":10,"nodeType":"244","messageId":"245","endLine":64,"endColumn":19},{"ruleId":"242","severity":1,"message":"261","line":65,"column":10,"nodeType":"244","messageId":"245","endLine":65,"endColumn":17},{"ruleId":"242","severity":1,"message":"262","line":66,"column":10,"nodeType":"244","messageId":"245","endLine":66,"endColumn":17},{"ruleId":"242","severity":1,"message":"263","line":68,"column":10,"nodeType":"244","messageId":"245","endLine":68,"endColumn":21},{"ruleId":"242","severity":1,"message":"264","line":68,"column":23,"nodeType":"244","messageId":"245","endLine":68,"endColumn":37},{"ruleId":"242","severity":1,"message":"265","line":69,"column":10,"nodeType":"244","messageId":"245","endLine":69,"endColumn":20},{"ruleId":"242","severity":1,"message":"266","line":69,"column":22,"nodeType":"244","messageId":"245","endLine":69,"endColumn":35},{"ruleId":"242","severity":1,"message":"267","line":71,"column":10,"nodeType":"244","messageId":"245","endLine":71,"endColumn":21},{"ruleId":"242","severity":1,"message":"268","line":71,"column":23,"nodeType":"244","messageId":"245","endLine":71,"endColumn":37},{"ruleId":"242","severity":1,"message":"269","line":146,"column":18,"nodeType":"244","messageId":"245","endLine":146,"endColumn":35},{"ruleId":"270","severity":1,"message":"271","line":146,"column":36,"nodeType":"272","messageId":"273","endLine":146,"endColumn":38},{"ruleId":"274","severity":1,"message":"275","line":219,"column":6,"nodeType":"276","endLine":219,"endColumn":21,"suggestions":"277"},{"ruleId":"274","severity":1,"message":"278","line":328,"column":6,"nodeType":"276","endLine":328,"endColumn":15,"suggestions":"279"},{"ruleId":"242","severity":1,"message":"280","line":1,"column":10,"nodeType":"244","messageId":"245","endLine":1,"endColumn":16},{"ruleId":"242","severity":1,"message":"281","line":1,"column":18,"nodeType":"244","messageId":"245","endLine":1,"endColumn":25},{"ruleId":"242","severity":1,"message":"282","line":1,"column":27,"nodeType":"244","messageId":"245","endLine":1,"endColumn":31},{"ruleId":"242","severity":1,"message":"283","line":3,"column":8,"nodeType":"244","messageId":"245","endLine":3,"endColumn":13},{"ruleId":"242","severity":1,"message":"284","line":4,"column":10,"nodeType":"244","messageId":"245","endLine":4,"endColumn":21},{"ruleId":"242","severity":1,"message":"285","line":4,"column":23,"nodeType":"244","messageId":"245","endLine":4,"endColumn":37},{"ruleId":"242","severity":1,"message":"286","line":16,"column":10,"nodeType":"244","messageId":"245","endLine":16,"endColumn":22},{"ruleId":"242","severity":1,"message":"287","line":16,"column":24,"nodeType":"244","messageId":"245","endLine":16,"endColumn":39},{"ruleId":"274","severity":1,"message":"288","line":22,"column":6,"nodeType":"276","endLine":22,"endColumn":12,"suggestions":"289"},{"ruleId":"274","severity":1,"message":"288","line":28,"column":6,"nodeType":"276","endLine":28,"endColumn":12,"suggestions":"290"},{"ruleId":"274","severity":1,"message":"291","line":28,"column":6,"nodeType":"276","endLine":28,"endColumn":8,"suggestions":"292"},{"ruleId":"242","severity":1,"message":"293","line":9,"column":11,"nodeType":"244","messageId":"245","endLine":9,"endColumn":18},{"ruleId":"242","severity":1,"message":"294","line":9,"column":20,"nodeType":"244","messageId":"245","endLine":9,"endColumn":30},{"ruleId":"274","severity":1,"message":"295","line":14,"column":6,"nodeType":"276","endLine":14,"endColumn":16,"suggestions":"296"},{"ruleId":"242","severity":1,"message":"297","line":2,"column":18,"nodeType":"244","messageId":"245","endLine":2,"endColumn":21},{"ruleId":"242","severity":1,"message":"298","line":6,"column":3,"nodeType":"244","messageId":"245","endLine":6,"endColumn":12},{"ruleId":"242","severity":1,"message":"299","line":7,"column":3,"nodeType":"244","messageId":"245","endLine":7,"endColumn":11},{"ruleId":"242","severity":1,"message":"280","line":1,"column":10,"nodeType":"244","messageId":"245","endLine":1,"endColumn":16},{"ruleId":"242","severity":1,"message":"281","line":1,"column":18,"nodeType":"244","messageId":"245","endLine":1,"endColumn":25},{"ruleId":"242","severity":1,"message":"282","line":1,"column":27,"nodeType":"244","messageId":"245","endLine":1,"endColumn":31},{"ruleId":"242","severity":1,"message":"283","line":3,"column":8,"nodeType":"244","messageId":"245","endLine":3,"endColumn":13},{"ruleId":"242","severity":1,"message":"284","line":4,"column":10,"nodeType":"244","messageId":"245","endLine":4,"endColumn":21},{"ruleId":"242","severity":1,"message":"285","line":4,"column":23,"nodeType":"244","messageId":"245","endLine":4,"endColumn":37},{"ruleId":"242","severity":1,"message":"251","line":45,"column":9,"nodeType":"244","messageId":"245","endLine":45,"endColumn":17},{"ruleId":"242","severity":1,"message":"286","line":48,"column":10,"nodeType":"244","messageId":"245","endLine":48,"endColumn":22},{"ruleId":"242","severity":1,"message":"287","line":48,"column":24,"nodeType":"244","messageId":"245","endLine":48,"endColumn":39},{"ruleId":"274","severity":1,"message":"300","line":72,"column":6,"nodeType":"276","endLine":72,"endColumn":12,"suggestions":"301"},{"ruleId":"242","severity":1,"message":"302","line":124,"column":10,"nodeType":"244","messageId":"245","endLine":124,"endColumn":24},{"ruleId":"270","severity":1,"message":"271","line":124,"column":25,"nodeType":"272","messageId":"273","endLine":124,"endColumn":27},{"ruleId":"242","severity":1,"message":"303","line":4,"column":10,"nodeType":"244","messageId":"245","endLine":4,"endColumn":21},{"ruleId":"242","severity":1,"message":"304","line":5,"column":10,"nodeType":"244","messageId":"245","endLine":5,"endColumn":23},{"ruleId":"242","severity":1,"message":"305","line":6,"column":8,"nodeType":"244","messageId":"245","endLine":6,"endColumn":13},{"ruleId":"242","severity":1,"message":"306","line":18,"column":12,"nodeType":"244","messageId":"245","endLine":18,"endColumn":22},{"ruleId":"242","severity":1,"message":"307","line":69,"column":11,"nodeType":"244","messageId":"245","endLine":69,"endColumn":17},{"ruleId":"274","severity":1,"message":"308","line":122,"column":6,"nodeType":"276","endLine":122,"endColumn":8,"suggestions":"309"},{"ruleId":"242","severity":1,"message":"310","line":1,"column":8,"nodeType":"244","messageId":"245","endLine":1,"endColumn":21},{"ruleId":"270","severity":1,"message":"271","line":4,"column":36,"nodeType":"272","messageId":"273","endLine":4,"endColumn":38},{"ruleId":"242","severity":1,"message":"249","line":4,"column":3,"nodeType":"244","messageId":"245","endLine":4,"endColumn":14},{"ruleId":"242","severity":1,"message":"250","line":5,"column":3,"nodeType":"244","messageId":"245","endLine":5,"endColumn":13},{"ruleId":"242","severity":1,"message":"299","line":7,"column":3,"nodeType":"244","messageId":"245","endLine":7,"endColumn":11},{"ruleId":"242","severity":1,"message":"311","line":7,"column":3,"nodeType":"244","messageId":"245","endLine":7,"endColumn":10},{"ruleId":"242","severity":1,"message":"312","line":22,"column":10,"nodeType":"244","messageId":"245","endLine":22,"endColumn":24},{"ruleId":"242","severity":1,"message":"313","line":44,"column":10,"nodeType":"244","messageId":"245","endLine":44,"endColumn":19},{"ruleId":"242","severity":1,"message":"314","line":66,"column":9,"nodeType":"244","messageId":"245","endLine":66,"endColumn":14},{"ruleId":"274","severity":1,"message":"288","line":72,"column":6,"nodeType":"276","endLine":72,"endColumn":15,"suggestions":"315"},{"ruleId":"242","severity":1,"message":"316","line":163,"column":10,"nodeType":"244","messageId":"245","endLine":163,"endColumn":21},{"ruleId":"242","severity":1,"message":"317","line":172,"column":10,"nodeType":"244","messageId":"245","endLine":172,"endColumn":15},{"ruleId":"242","severity":1,"message":"318","line":2,"column":17,"nodeType":"244","messageId":"245","endLine":2,"endColumn":27},{"ruleId":"242","severity":1,"message":"319","line":2,"column":29,"nodeType":"244","messageId":"245","endLine":2,"endColumn":37},{"ruleId":"242","severity":1,"message":"320","line":3,"column":10,"nodeType":"244","messageId":"245","endLine":3,"endColumn":16},{"ruleId":"242","severity":1,"message":"297","line":4,"column":18,"nodeType":"244","messageId":"245","endLine":4,"endColumn":21},{"ruleId":"321","severity":1,"message":"322","line":52,"column":10,"nodeType":"323","endLine":52,"endColumn":56},{"ruleId":"321","severity":1,"message":"322","line":56,"column":10,"nodeType":"323","endLine":56,"endColumn":58},{"ruleId":"274","severity":1,"message":"324","line":44,"column":6,"nodeType":"276","endLine":44,"endColumn":10,"suggestions":"325"},{"ruleId":"274","severity":1,"message":"324","line":64,"column":6,"nodeType":"276","endLine":64,"endColumn":12,"suggestions":"326"},{"ruleId":"242","severity":1,"message":"327","line":1,"column":8,"nodeType":"244","messageId":"245","endLine":1,"endColumn":21},{"ruleId":"242","severity":1,"message":"328","line":1,"column":10,"nodeType":"244","messageId":"245","endLine":1,"endColumn":19},{"ruleId":"242","severity":1,"message":"329","line":1,"column":21,"nodeType":"244","messageId":"245","endLine":1,"endColumn":27},{"ruleId":"270","severity":1,"message":"271","line":43,"column":40,"nodeType":"272","messageId":"273","endLine":43,"endColumn":42},{"ruleId":"242","severity":1,"message":"330","line":47,"column":9,"nodeType":"244","messageId":"245","endLine":47,"endColumn":13},{"ruleId":"242","severity":1,"message":"331","line":48,"column":9,"nodeType":"244","messageId":"245","endLine":48,"endColumn":11},{"ruleId":"242","severity":1,"message":"328","line":1,"column":10,"nodeType":"244","messageId":"245","endLine":1,"endColumn":19},{"ruleId":"242","severity":1,"message":"332","line":2,"column":10,"nodeType":"244","messageId":"245","endLine":2,"endColumn":21},{"ruleId":"242","severity":1,"message":"333","line":3,"column":8,"nodeType":"244","messageId":"245","endLine":3,"endColumn":19},{"ruleId":"242","severity":1,"message":"304","line":4,"column":10,"nodeType":"244","messageId":"245","endLine":4,"endColumn":23},{"ruleId":"242","severity":1,"message":"306","line":15,"column":12,"nodeType":"244","messageId":"245","endLine":15,"endColumn":22},{"ruleId":"242","severity":1,"message":"307","line":61,"column":11,"nodeType":"244","messageId":"245","endLine":61,"endColumn":17},{"ruleId":"274","severity":1,"message":"308","line":114,"column":6,"nodeType":"276","endLine":114,"endColumn":8,"suggestions":"334"},"no-native-reassign",["335"],"no-negated-in-lhs",["336"],"no-unused-vars","'ChakraProvider' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'WidthContainer' is defined but never used.","'RoomSceneLoader' is defined but never used.","'BrowserView' is defined but never used.","'MobileView' is defined but never used.","'navigate' is assigned a value but never used.","'fakeNft' is assigned a value but never used.","'supplyAvailable' is assigned a value but never used.","'balanceOf' is assigned a value but never used.","'setBalanceOf' is assigned a value but never used.","'price' is assigned a value but never used.","'currentNetwork' is assigned a value but never used.","'blockchainExplorerURL' is assigned a value but never used.","'openseaURL' is assigned a value but never used.","'isMinting' is assigned a value but never used.","'isError' is assigned a value but never used.","'message' is assigned a value but never used.","'currentTime' is assigned a value but never used.","'setCurrentTime' is assigned a value but never used.","'revealTime' is assigned a value but never used.","'setRevealTime' is assigned a value but never used.","'allowedNfts' is assigned a value but never used.","'setAllowedNfts' is assigned a value but never used.","'getNftAndMetadata' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isLoadingInitialData'. Either include it or remove the dependency array.","ArrayExpression",["337"],"React Hook useEffect has missing dependencies: 'loadBlockchainData' and 'loadWeb3'. Either include them or remove the dependency array.",["338"],"'Center' is defined but never used.","'Heading' is defined but never used.","'Text' is defined but never used.","'Panel' is defined but never used.","'SunkenInput' is defined but never used.","'SunkenTextArea' is defined but never used.","'tweetMessage' is assigned a value but never used.","'setTweetMessage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["339"],["340"],"React Hook useEffect has missing dependencies: 'downHandler' and 'upHandler'. Either include them or remove the dependency array.",["341"],"'account' is assigned a value but never used.","'setAccount' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'web3Handler'. Either include it or remove the dependency array.",["342"],"'css' is defined but never used.","'isBrowser' is defined but never used.","'isMobile' is defined but never used.","React Hook useEffect has missing dependencies: 'currentlyMinting' and 'mint'. Either include them or remove the dependency array.",["343"],"'SelectionStage' is defined but never used.","'CSS3DObject' is defined but never used.","'OrbitControls' is defined but never used.","'MyApp' is defined but never used.","'setupModel' is defined but never used.","'object' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'runModel'. Either include it or remove the dependency array.",["344"],"'ComputerModel' is defined but never used.","'useGLTF' is defined but never used.","'SceneSpotlight' is defined but never used.","'RectLight' is defined but never used.","'light' is assigned a value but never used.",["345"],"'LowPolyRoom' is defined but never used.","'Watch' is defined but never used.","'useContext' is defined but never used.","'useState' is defined but never used.","'Button' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'items', 'selected', and 'setSelection'. Either include them or remove the dependency array. If 'setSelection' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["346"],["347"],"'TypeAnimation' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'down' is assigned a value but never used.","'up' is assigned a value but never used.","'useNavigate' is defined but never used.","'useKeyPress' is defined but never used.",["348"],"no-global-assign","no-unsafe-negation",{"desc":"349","fix":"350"},{"desc":"351","fix":"352"},{"desc":"353","fix":"354"},{"desc":"355","fix":"356"},{"desc":"357","fix":"358"},{"desc":"359","fix":"360"},{"desc":"361","fix":"362"},{"desc":"363","fix":"364"},{"desc":"365","fix":"366"},{"desc":"367","fix":"368"},{"desc":"369","fix":"370"},{"desc":"363","fix":"371"},"Update the dependencies array to be: [clearKeyPress, isLoadingInitialData]",{"range":"372","text":"373"},"Update the dependencies array to be: [account, loadBlockchainData, loadWeb3]",{"range":"374","text":"375"},"Update the dependencies array to be: [mKey, navigate]",{"range":"376","text":"377"},"Update the dependencies array to be: [navigate, tKey]",{"range":"378","text":"379"},"Update the dependencies array to be: [downHandler, upHandler]",{"range":"380","text":"381"},"Update the dependencies array to be: [keyPress, web3Handler]",{"range":"382","text":"383"},"Update the dependencies array to be: [currentlyMinting, mKey, mint]",{"range":"384","text":"385"},"Update the dependencies array to be: [runModel]",{"range":"386","text":"387"},"Update the dependencies array to be: [l, f, g, navigate]",{"range":"388","text":"389"},"Update the dependencies array to be: [items, selected, setSelection, up]",{"range":"390","text":"391"},"Update the dependencies array to be: [down, items, selected, setSelection]",{"range":"392","text":"393"},{"range":"394","text":"387"},[6552,6567],"[clearKeyPress, isLoadingInitialData]",[9761,9770],"[account, loadBlockchainData, loadWeb3]",[808,814],"[mKey, navigate]",[891,897],"[navigate, tKey]",[864,866],"[downHandler, upHandler]",[474,484],"[keyPress, web3Handler]",[2224,2230],"[currentlyMinting, mKey, mint]",[3653,3655],"[runModel]",[1634,1643],"[l, f, g, navigate]",[1141,1145],"[items, selected, setSelection, up]",[1662,1668],"[down, items, selected, setSelection]",[3415,3417]]