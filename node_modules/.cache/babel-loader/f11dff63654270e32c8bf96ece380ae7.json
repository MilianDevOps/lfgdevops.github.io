{"ast":null,"code":"export default\n/* glsl */\n\"\\n#ifdef USE_TRANSMISSION\\n\\n\\tfloat transmissionAlpha = 1.0;\\n\\tfloat transmissionFactor = transmission;\\n\\tfloat thicknessFactor = thickness;\\n\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\n\\t\\ttransmissionFactor *= texture2D( transmissionMap, vUv ).r;\\n\\n\\t#endif\\n\\n\\t#ifdef USE_THICKNESSMAP\\n\\n\\t\\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\\n\\n\\t#endif\\n\\n\\tvec3 pos = vWorldPosition;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 n = inverseTransformDirection( normal, viewMatrix );\\n\\n\\tvec4 transmission = getIBLVolumeRefraction(\\n\\t\\tn, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\\n\\t\\tattenuationColor, attenuationDistance );\\n\\n\\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );\\n\\ttransmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );\\n#endif\\n\";","map":null,"metadata":{},"sourceType":"module"}