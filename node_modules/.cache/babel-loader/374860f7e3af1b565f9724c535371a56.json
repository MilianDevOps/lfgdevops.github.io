{"ast":null,"code":"import _classCallCheck from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport Node from '../core/Node.js';\nimport TimerNode from './TimerNode.js';\nimport { add, mul, sin, round, fract, abs, sub } from '../ShaderNode.js';\n\nvar OscNode = /*#__PURE__*/function (_Node) {\n  _inherits(OscNode, _Node);\n\n  var _super = _createSuper(OscNode);\n\n  function OscNode() {\n    var _this;\n\n    var method = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : OscNode.SINE;\n    var timeNode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new TimerNode();\n\n    _classCallCheck(this, OscNode);\n\n    _this = _super.call(this);\n    _this.method = method;\n    _this.timeNode = timeNode;\n    return _this;\n  }\n\n  _createClass(OscNode, [{\n    key: \"getNodeType\",\n    value: function getNodeType(builder) {\n      return this.timeNode.getNodeType(builder);\n    }\n  }, {\n    key: \"generate\",\n    value: function generate(builder) {\n      var method = this.method;\n      var timeNode = this.timeNode;\n      var outputNode = null;\n\n      if (method === OscNode.SINE) {\n        outputNode = add(mul(sin(mul(add(timeNode, 0.75), Math.PI * 2)), 0.5), 0.5);\n      } else if (method === OscNode.SQUARE) {\n        outputNode = round(fract(timeNode));\n      } else if (method === OscNode.TRIANGLE) {\n        outputNode = abs(sub(1, mul(fract(add(timeNode, 0.5)), 2)));\n      } else if (method === OscNode.SAWTOOTH) {\n        outputNode = fract(timeNode);\n      }\n\n      return outputNode.build(builder);\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize(data) {\n      _get(_getPrototypeOf(OscNode.prototype), \"serialize\", this).call(this, data);\n\n      data.method = this.method;\n    }\n  }, {\n    key: \"deserialize\",\n    value: function deserialize(data) {\n      _get(_getPrototypeOf(OscNode.prototype), \"deserialize\", this).call(this, data);\n\n      this.method = data.method;\n    }\n  }]);\n\n  return OscNode;\n}(Node);\n\n_defineProperty(OscNode, \"SINE\", 'sine');\n\n_defineProperty(OscNode, \"SQUARE\", 'square');\n\n_defineProperty(OscNode, \"TRIANGLE\", 'triangle');\n\n_defineProperty(OscNode, \"SAWTOOTH\", 'sawtooth');\n\nexport default OscNode;","map":null,"metadata":{},"sourceType":"module"}