{"ast":null,"code":"import _classCallCheck from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { LinearFilter } from '../constants.js';\nimport { Texture } from './Texture.js';\n\nvar VideoTexture = /*#__PURE__*/function (_Texture) {\n  _inherits(VideoTexture, _Texture);\n\n  var _super = _createSuper(VideoTexture);\n\n  function VideoTexture(video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy) {\n    var _this;\n\n    _classCallCheck(this, VideoTexture);\n\n    _this = _super.call(this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n    _this.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n    _this.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n    _this.generateMipmaps = false;\n\n    var scope = _assertThisInitialized(_this);\n\n    function updateVideo() {\n      scope.needsUpdate = true;\n      video.requestVideoFrameCallback(updateVideo);\n    }\n\n    if ('requestVideoFrameCallback' in video) {\n      video.requestVideoFrameCallback(updateVideo);\n    }\n\n    return _this;\n  }\n\n  _createClass(VideoTexture, [{\n    key: \"clone\",\n    value: function clone() {\n      return new this.constructor(this.image).copy(this);\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var video = this.image;\n      var hasVideoFrameCallback = ('requestVideoFrameCallback' in video);\n\n      if (hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA) {\n        this.needsUpdate = true;\n      }\n    }\n  }]);\n\n  return VideoTexture;\n}(Texture);\n\nVideoTexture.prototype.isVideoTexture = true;\nexport { VideoTexture };","map":null,"metadata":{},"sourceType":"module"}