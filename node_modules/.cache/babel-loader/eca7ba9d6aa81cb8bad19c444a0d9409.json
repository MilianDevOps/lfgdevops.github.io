{"ast":null,"code":"import _classCallCheck from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport Object3DNode from './Object3DNode.js';\n\nvar CameraNode = /*#__PURE__*/function (_Object3DNode) {\n  _inherits(CameraNode, _Object3DNode);\n\n  var _super = _createSuper(CameraNode);\n\n  function CameraNode() {\n    var scope = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : CameraNode.POSITION;\n\n    _classCallCheck(this, CameraNode);\n\n    return _super.call(this, scope);\n  }\n\n  _createClass(CameraNode, [{\n    key: \"getNodeType\",\n    value: function getNodeType(builder) {\n      var scope = this.scope;\n\n      if (scope === CameraNode.PROJECTION_MATRIX) {\n        return 'mat4';\n      }\n\n      return _get(_getPrototypeOf(CameraNode.prototype), \"getNodeType\", this).call(this, builder);\n    }\n  }, {\n    key: \"update\",\n    value: function update(frame) {\n      var camera = frame.camera;\n      var uniformNode = this._uniformNode;\n      var scope = this.scope;\n\n      if (scope === CameraNode.PROJECTION_MATRIX) {\n        uniformNode.value = camera.projectionMatrix;\n      } else if (scope === CameraNode.VIEW_MATRIX) {\n        uniformNode.value = camera.matrixWorldInverse;\n      } else {\n        this.object3d = camera;\n\n        _get(_getPrototypeOf(CameraNode.prototype), \"update\", this).call(this, frame);\n      }\n    }\n  }, {\n    key: \"generate\",\n    value: function generate(builder) {\n      var scope = this.scope;\n\n      if (scope === CameraNode.PROJECTION_MATRIX) {\n        this._uniformNode.nodeType = 'mat4';\n      }\n\n      return _get(_getPrototypeOf(CameraNode.prototype), \"generate\", this).call(this, builder);\n    }\n  }]);\n\n  return CameraNode;\n}(Object3DNode);\n\n_defineProperty(CameraNode, \"PROJECTION_MATRIX\", 'projectionMatrix');\n\nexport default CameraNode;","map":null,"metadata":{},"sourceType":"module"}