{"ast":null,"code":"import { LinearFilter } from '../constants.js';\nimport { Texture } from './Texture.js';\n\nclass VideoTexture extends Texture {\n  constructor(video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy) {\n    super(video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n    this.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n    this.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n    this.generateMipmaps = false;\n    const scope = this;\n\n    function updateVideo() {\n      scope.needsUpdate = true;\n      video.requestVideoFrameCallback(updateVideo);\n    }\n\n    if ('requestVideoFrameCallback' in video) {\n      video.requestVideoFrameCallback(updateVideo);\n    }\n  }\n\n  clone() {\n    return new this.constructor(this.image).copy(this);\n  }\n\n  update() {\n    const video = this.image;\n    const hasVideoFrameCallback = ('requestVideoFrameCallback' in video);\n\n    if (hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA) {\n      this.needsUpdate = true;\n    }\n  }\n\n}\n\nVideoTexture.prototype.isVideoTexture = true;\nexport { VideoTexture };","map":null,"metadata":{},"sourceType":"module"}