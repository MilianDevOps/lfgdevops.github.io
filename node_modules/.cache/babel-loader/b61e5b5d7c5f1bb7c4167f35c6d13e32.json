{"ast":null,"code":"import _classCallCheck from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport Node from '../core/Node.js';\n\nvar JoinNode = /*#__PURE__*/function (_Node) {\n  _inherits(JoinNode, _Node);\n\n  var _super = _createSuper(JoinNode);\n\n  function JoinNode() {\n    var _this;\n\n    var nodes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    _classCallCheck(this, JoinNode);\n\n    _this = _super.call(this);\n    _this.nodes = nodes;\n    return _this;\n  }\n\n  _createClass(JoinNode, [{\n    key: \"getNodeType\",\n    value: function getNodeType(builder) {\n      return builder.getTypeFromLength(this.nodes.reduce(function (count, cur) {\n        return count + builder.getTypeLength(cur.getNodeType(builder));\n      }, 0));\n    }\n  }, {\n    key: \"generate\",\n    value: function generate(builder) {\n      var type = this.getNodeType(builder);\n      var nodes = this.nodes;\n      var snippetValues = [];\n\n      for (var i = 0; i < nodes.length; i++) {\n        var input = nodes[i];\n        var inputSnippet = input.build(builder);\n        snippetValues.push(inputSnippet);\n      }\n\n      return \"\".concat(builder.getType(type), \"( \").concat(snippetValues.join(', '), \" )\");\n    }\n  }]);\n\n  return JoinNode;\n}(Node);\n\nexport default JoinNode;","map":null,"metadata":{},"sourceType":"module"}