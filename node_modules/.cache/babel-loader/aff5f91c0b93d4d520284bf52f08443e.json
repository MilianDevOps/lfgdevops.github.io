{"ast":null,"code":"import _classCallCheck from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport Node from '../core/Node.js';\nimport { normalize, sub, positionWorld, cameraPosition, reflect, normalWorld, nodeObject, join, negate } from '../ShaderNode.js';\n\nvar ReflectNode = /*#__PURE__*/function (_Node) {\n  _inherits(ReflectNode, _Node);\n\n  var _super = _createSuper(ReflectNode);\n\n  function ReflectNode() {\n    var _this;\n\n    var scope = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ReflectNode.CUBE;\n\n    _classCallCheck(this, ReflectNode);\n\n    _this = _super.call(this, 'vec3');\n    _this.scope = scope;\n    return _this;\n  }\n\n  _createClass(ReflectNode, [{\n    key: \"getHash\",\n    value: function getHash() {\n      return \"reflect-\".concat(this.scope);\n    }\n  }, {\n    key: \"generate\",\n    value: function generate(builder) {\n      var scope = this.scope;\n\n      if (scope === ReflectNode.VECTOR) {\n        var cameraToFrag = normalize(sub(positionWorld, cameraPosition));\n        var reflectVec = reflect(cameraToFrag, normalWorld);\n        return reflectVec.build(builder);\n      } else if (scope === ReflectNode.CUBE) {\n        var _reflectVec = nodeObject(new ReflectNode(ReflectNode.VECTOR));\n\n        var cubeUV = join(negate(_reflectVec.x), _reflectVec.yz);\n        return cubeUV.build(builder);\n      }\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize(data) {\n      _get(_getPrototypeOf(ReflectNode.prototype), \"serialize\", this).call(this, data);\n\n      data.scope = this.scope;\n    }\n  }, {\n    key: \"deserialize\",\n    value: function deserialize(data) {\n      _get(_getPrototypeOf(ReflectNode.prototype), \"deserialize\", this).call(this, data);\n\n      this.scope = data.scope;\n    }\n  }]);\n\n  return ReflectNode;\n}(Node);\n\n_defineProperty(ReflectNode, \"VECTOR\", 'vector');\n\n_defineProperty(ReflectNode, \"CUBE\", 'cube');\n\nexport default ReflectNode;","map":null,"metadata":{},"sourceType":"module"}