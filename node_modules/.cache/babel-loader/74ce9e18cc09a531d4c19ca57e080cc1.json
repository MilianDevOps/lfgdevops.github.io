{"ast":null,"code":"var _jsxFileName = \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/src/Pages/Mint.js\",\n    _s = $RefreshSig$();\n\nimport { Center, Heading, Text } from \"@chakra-ui/react\";\nimport { useContext, useEffect, useState } from \"react\";\nimport Panel from \"../components/Panel\";\nimport { SunkenInput, SunkenTextArea } from \"../components/SunkenInput\";\nimport { WidthContainer } from \"../components/WidthContainer\";\nimport TypeAnimation from \"react-type-animation\";\nimport useKeyPress from \"../components/useKeyPress\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Web3Context } from \"../contexts/Web3Context\";\nimport ComputerModel from \"../components/RoomScene/ComputerModel\";\nimport VertArrowScrollList from \"../components/VertArrowScrollList\";\nimport ScrollListItem from \"../components/ScrollListItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction isUsedNft(_ref) {\n  let {\n    cyberDeckNfts,\n    address,\n    tokenId\n  } = _ref;\n\n  for (const c of cyberDeckNfts) {\n    if (c.tokenData.parentTokenAddress === address && c.tokenData.parentTokenId.toString() === tokenId.toString()) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction filterNFTS(_ref2) {\n  let {\n    cyberDeckNfts,\n    allowedNfts\n  } = _ref2;\n  let nonUsed = [];\n\n  for (const a of allowedNfts) {\n    const {\n      tokenId,\n      address\n    } = a;\n    const isUsed = isUsedNft({\n      cyberDeckNfts: cyberDeckNfts,\n      address: address,\n      tokenId: tokenId\n    });\n\n    if (!isUsed) {\n      nonUsed.push(a);\n    }\n  }\n\n  return nonUsed;\n}\n\nexport default function Mint() {\n  _s();\n\n  const {\n    mintNFTHandler,\n    ownedAllowedNfts,\n    ownedTokens\n  } = useContext(Web3Context);\n  const navigate = useNavigate();\n  const mKey = useKeyPress(\"m\");\n  const {\n    account\n  } = useContext(Web3Context);\n  const [tweetMessage, setTweetMessage] = useState(\"\");\n  const [selection, setSelection] = useState(ownedAllowedNfts[0]);\n  const [currentlyMinting, setCurrentlyMinting] = useState(false);\n  const [nonUsedNFTs, setNonUsedNFTS] = useState(filterNFTS({\n    cyberDeckNfts: ownedTokens,\n    allowedNfts: ownedAllowedNfts\n  }));\n\n  async function mint() {\n    if (ownedAllowedNfts.length > 0) {\n      setCurrentlyMinting(true);\n      mintNFTHandler({\n        tokenAddress: selection.address,\n        tokenId: selection.tokenId\n      });\n      setCurrentlyMinting(false);\n    }\n  }\n\n  useEffect(() => {\n    if (mKey) {\n      if (!currentlyMinting) {\n        mint();\n      }\n    }\n  }, [mKey]);\n  useEffect(() => {\n    setNonUsedNFTS(filterNFTS({\n      cyberDeckNfts: ownedTokens,\n      allowedNfts: ownedAllowedNfts\n    }));\n  }, [ownedTokens, ownedAllowedNfts]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(WidthContainer, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"left\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: /*#__PURE__*/_jsxDEV(\"output\", {\n            children: [/*#__PURE__*/_jsxDEV(TypeAnimation, {\n              cursor: false,\n              sequence: [\"LFG CyberDeck\"],\n              wrapper: \"h2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TypeAnimation, {\n              cursor: false,\n              sequence: [account],\n              wrapper: \"p\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TypeAnimation, {\n              cursor: false,\n              sequence: [\" \"],\n              wrapper: \"p\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TypeAnimation, {\n              cursor: false,\n              sequence: [500, \"Mint your own CyberDeck to gain access to Web3 through your legacy NFT.\"],\n              wrapper: \"p\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ComputerModel, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TypeAnimation, {\n              cursor: false,\n              sequence: [`Press 'M' to Mint a 1,000 ETH CyberDeck for ${selection.name} #${selection.tokenId}`],\n              wrapper: \"p\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: `Valid NFT's (${nonUsedNFTs.length}) - Use W and S to navigate`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(VertArrowScrollList, {\n              items: nonUsedNFTs,\n              ListItemComponent: ScrollListItem,\n              setSelection: setSelection\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Mint, \"7U394QenAivqSZR3hhe0JDdHT4c=\", false, function () {\n  return [useNavigate, useKeyPress];\n});\n\n_c = Mint;\n\nfunction SelectionStage(_ref3) {\n  let {} = _ref3;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(VertArrowScrollList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = SelectionStage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Mint\");\n$RefreshReg$(_c2, \"SelectionStage\");","map":{"version":3,"sources":["/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/src/Pages/Mint.js"],"names":["Center","Heading","Text","useContext","useEffect","useState","Panel","SunkenInput","SunkenTextArea","WidthContainer","TypeAnimation","useKeyPress","useNavigate","Web3Context","ComputerModel","VertArrowScrollList","ScrollListItem","isUsedNft","cyberDeckNfts","address","tokenId","c","tokenData","parentTokenAddress","parentTokenId","toString","filterNFTS","allowedNfts","nonUsed","a","isUsed","push","Mint","mintNFTHandler","ownedAllowedNfts","ownedTokens","navigate","mKey","account","tweetMessage","setTweetMessage","selection","setSelection","currentlyMinting","setCurrentlyMinting","nonUsedNFTs","setNonUsedNFTS","mint","length","tokenAddress","textAlign","name","SelectionStage"],"mappings":"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","sourcesContent":["import { Center, Heading, Text } from \"@chakra-ui/react\";\nimport { useContext, useEffect, useState } from \"react\";\nimport Panel from \"../components/Panel\";\nimport { SunkenInput, SunkenTextArea } from \"../components/SunkenInput\";\nimport { WidthContainer } from \"../components/WidthContainer\";\nimport TypeAnimation from \"react-type-animation\";\nimport useKeyPress from \"../components/useKeyPress\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Web3Context } from \"../contexts/Web3Context\";\nimport ComputerModel from \"../components/RoomScene/ComputerModel\";\nimport VertArrowScrollList from \"../components/VertArrowScrollList\";\nimport ScrollListItem from \"../components/ScrollListItem\";\n\nfunction isUsedNft({ cyberDeckNfts, address, tokenId }) {\n  for (const c of cyberDeckNfts) {\n    if (\n      c.tokenData.parentTokenAddress === address &&\n      c.tokenData.parentTokenId.toString() === tokenId.toString()\n    ) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction filterNFTS({ cyberDeckNfts, allowedNfts }) {\n  let nonUsed = [];\n  for (const a of allowedNfts) {\n    const { tokenId, address } = a;\n    const isUsed = isUsedNft({\n      cyberDeckNfts: cyberDeckNfts,\n      address: address,\n      tokenId: tokenId,\n    });\n    if (!isUsed) {\n      nonUsed.push(a);\n    }\n  }\n  return nonUsed;\n}\n\nexport default function Mint() {\n  const { mintNFTHandler, ownedAllowedNfts, ownedTokens } =\n    useContext(Web3Context);\n  const navigate = useNavigate();\n  const mKey = useKeyPress(\"m\");\n  const { account } = useContext(Web3Context);\n  const [tweetMessage, setTweetMessage] = useState(\"\");\n  const [selection, setSelection] = useState(ownedAllowedNfts[0]);\n  const [currentlyMinting, setCurrentlyMinting] = useState(false);\n  const [nonUsedNFTs, setNonUsedNFTS] = useState(\n    filterNFTS({ cyberDeckNfts: ownedTokens, allowedNfts: ownedAllowedNfts })\n  );\n\n  async function mint() {\n    if (ownedAllowedNfts.length > 0) {\n      setCurrentlyMinting(true);\n      mintNFTHandler({\n        tokenAddress: selection.address,\n        tokenId: selection.tokenId,\n      });\n      setCurrentlyMinting(false);\n    }\n  }\n\n  useEffect(() => {\n    if (mKey) {\n      if (!currentlyMinting) {\n        mint();\n      }\n    }\n  }, [mKey]);\n\n  useEffect(() => {\n    setNonUsedNFTS(\n      filterNFTS({ cyberDeckNfts: ownedTokens, allowedNfts: ownedAllowedNfts })\n    );\n  }, [ownedTokens, ownedAllowedNfts]);\n\n  return (\n    <>\n      <WidthContainer>\n        <div style={{ textAlign: \"left\" }}>\n          <pre>\n            <output>\n              <TypeAnimation\n                cursor={false}\n                sequence={[\"LFG CyberDeck\"]}\n                wrapper=\"h2\"\n              />\n              <TypeAnimation cursor={false} sequence={[account]} wrapper=\"p\" />\n              <TypeAnimation cursor={false} sequence={[\" \"]} wrapper=\"p\" />\n              <TypeAnimation\n                cursor={false}\n                sequence={[\n                  500,\n                  \"Mint your own CyberDeck to gain access to Web3 through your legacy NFT.\",\n                ]}\n                wrapper=\"p\"\n              />\n              <ComputerModel />\n              <TypeAnimation\n                cursor={false}\n                sequence={[\n                  `Press 'M' to Mint a 1,000 ETH CyberDeck for ${selection.name} #${selection.tokenId}`,\n                ]}\n                wrapper=\"p\"\n              />\n              <div>{`Valid NFT's (${nonUsedNFTs.length}) - Use W and S to navigate`}</div>\n\n              <VertArrowScrollList\n                items={nonUsedNFTs}\n                ListItemComponent={ScrollListItem}\n                setSelection={setSelection}\n              />\n            </output>\n          </pre>\n        </div>\n      </WidthContainer>\n    </>\n  );\n}\n\nfunction SelectionStage({}) {\n  return (\n    <div>\n      <VertArrowScrollList />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}