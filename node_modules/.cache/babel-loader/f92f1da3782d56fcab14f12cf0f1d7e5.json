{"ast":null,"code":"import _classCallCheck from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport Node from '../core/Node.js';\nimport { ShaderNode, element, mul, positionLocal, add, transformDirection, normalLocal, assign, attribute, uniform, mat4, buffer } from '../ShaderNode.js';\nimport { NodeUpdateType } from '../core/constants.js';\nvar Skinning = new ShaderNode(function (inputs, builder) {\n  var index = inputs.index,\n      weight = inputs.weight,\n      bindMatrix = inputs.bindMatrix,\n      bindMatrixInverse = inputs.bindMatrixInverse,\n      boneMatrices = inputs.boneMatrices;\n  var boneMatX = element(boneMatrices, index.x);\n  var boneMatY = element(boneMatrices, index.y);\n  var boneMatZ = element(boneMatrices, index.z);\n  var boneMatW = element(boneMatrices, index.w); // POSITION\n\n  var skinVertex = mul(bindMatrix, positionLocal);\n  var skinned = add(mul(mul(boneMatX, skinVertex), weight.x), mul(mul(boneMatY, skinVertex), weight.y), mul(mul(boneMatZ, skinVertex), weight.z), mul(mul(boneMatW, skinVertex), weight.w));\n  var skinPosition = mul(bindMatrixInverse, skinned).xyz; // NORMAL\n\n  var skinMatrix = add(mul(weight.x, boneMatX), mul(weight.y, boneMatY), mul(weight.z, boneMatZ), mul(weight.w, boneMatW));\n  skinMatrix = mul(mul(bindMatrixInverse, skinMatrix), bindMatrix);\n  var skinNormal = transformDirection(skinMatrix, normalLocal).xyz; // ASSIGNS\n\n  assign(positionLocal, skinPosition).build(builder);\n  assign(normalLocal, skinNormal).build(builder);\n});\n\nvar SkinningNode = /*#__PURE__*/function (_Node) {\n  _inherits(SkinningNode, _Node);\n\n  var _super = _createSuper(SkinningNode);\n\n  function SkinningNode(skinnedMesh) {\n    var _this;\n\n    _classCallCheck(this, SkinningNode);\n\n    _this = _super.call(this, 'void');\n    _this.skinnedMesh = skinnedMesh;\n    _this.updateType = NodeUpdateType.Object; //\n\n    _this.skinIndexNode = attribute('skinIndex', 'uvec4');\n    _this.skinWeightNode = attribute('skinWeight', 'vec4');\n    _this.bindMatrixNode = uniform(mat4(skinnedMesh.bindMatrix));\n    _this.bindMatrixInverseNode = uniform(mat4(skinnedMesh.bindMatrixInverse));\n    _this.boneMatricesNode = buffer(skinnedMesh.skeleton.boneMatrices, 'mat4', skinnedMesh.skeleton.bones.length);\n    return _this;\n  }\n\n  _createClass(SkinningNode, [{\n    key: \"generate\",\n    value: function generate(builder) {\n      Skinning({\n        index: this.skinIndexNode,\n        weight: this.skinWeightNode,\n        bindMatrix: this.bindMatrixNode,\n        bindMatrixInverse: this.bindMatrixInverseNode,\n        boneMatrices: this.boneMatricesNode\n      }, builder);\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      this.skinnedMesh.skeleton.update();\n    }\n  }]);\n\n  return SkinningNode;\n}(Node);\n\nexport default SkinningNode;","map":null,"metadata":{},"sourceType":"module"}