{"ast":null,"code":"import _classCallCheck from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport Node from './Node.js';\nimport { NodeShaderStage } from './constants.js';\n\nvar VaryNode = /*#__PURE__*/function (_Node) {\n  _inherits(VaryNode, _Node);\n\n  var _super = _createSuper(VaryNode);\n\n  function VaryNode(node) {\n    var _this;\n\n    var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n    _classCallCheck(this, VaryNode);\n\n    _this = _super.call(this);\n    _this.node = node;\n    _this.name = name;\n    return _this;\n  }\n\n  _createClass(VaryNode, [{\n    key: \"getHash\",\n    value: function getHash(builder) {\n      return this.name || _get(_getPrototypeOf(VaryNode.prototype), \"getHash\", this).call(this, builder);\n    }\n  }, {\n    key: \"getNodeType\",\n    value: function getNodeType(builder) {\n      // VaryNode is auto type\n      return this.node.getNodeType(builder);\n    }\n  }, {\n    key: \"generate\",\n    value: function generate(builder) {\n      var type = this.getNodeType(builder);\n      var node = this.node;\n      var name = this.name;\n      var nodeVary = builder.getVaryFromNode(this, type);\n\n      if (name !== null) {\n        nodeVary.name = name;\n      }\n\n      var propertyName = builder.getPropertyName(nodeVary, NodeShaderStage.Vertex); // force node run in vertex stage\n\n      builder.flowNodeFromShaderStage(NodeShaderStage.Vertex, node, type, propertyName);\n      return builder.getPropertyName(nodeVary);\n    }\n  }]);\n\n  return VaryNode;\n}(Node);\n\nexport default VaryNode;","map":null,"metadata":{},"sourceType":"module"}