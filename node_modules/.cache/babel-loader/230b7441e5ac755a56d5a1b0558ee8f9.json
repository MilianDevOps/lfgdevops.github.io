{"ast":null,"code":"import _classCallCheck from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Material } from './Material.js';\nimport { MultiplyOperation } from '../constants.js';\nimport { Color } from '../math/Color.js';\n/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n * }\n */\n\nvar MeshLambertMaterial = /*#__PURE__*/function (_Material) {\n  _inherits(MeshLambertMaterial, _Material);\n\n  var _super = _createSuper(MeshLambertMaterial);\n\n  function MeshLambertMaterial(parameters) {\n    var _this;\n\n    _classCallCheck(this, MeshLambertMaterial);\n\n    _this = _super.call(this);\n    _this.type = 'MeshLambertMaterial';\n    _this.color = new Color(0xffffff); // diffuse\n\n    _this.map = null;\n    _this.lightMap = null;\n    _this.lightMapIntensity = 1.0;\n    _this.aoMap = null;\n    _this.aoMapIntensity = 1.0;\n    _this.emissive = new Color(0x000000);\n    _this.emissiveIntensity = 1.0;\n    _this.emissiveMap = null;\n    _this.specularMap = null;\n    _this.alphaMap = null;\n    _this.envMap = null;\n    _this.combine = MultiplyOperation;\n    _this.reflectivity = 1;\n    _this.refractionRatio = 0.98;\n    _this.wireframe = false;\n    _this.wireframeLinewidth = 1;\n    _this.wireframeLinecap = 'round';\n    _this.wireframeLinejoin = 'round';\n\n    _this.setValues(parameters);\n\n    return _this;\n  }\n\n  _createClass(MeshLambertMaterial, [{\n    key: \"copy\",\n    value: function copy(source) {\n      _get(_getPrototypeOf(MeshLambertMaterial.prototype), \"copy\", this).call(this, source);\n\n      this.color.copy(source.color);\n      this.map = source.map;\n      this.lightMap = source.lightMap;\n      this.lightMapIntensity = source.lightMapIntensity;\n      this.aoMap = source.aoMap;\n      this.aoMapIntensity = source.aoMapIntensity;\n      this.emissive.copy(source.emissive);\n      this.emissiveMap = source.emissiveMap;\n      this.emissiveIntensity = source.emissiveIntensity;\n      this.specularMap = source.specularMap;\n      this.alphaMap = source.alphaMap;\n      this.envMap = source.envMap;\n      this.combine = source.combine;\n      this.reflectivity = source.reflectivity;\n      this.refractionRatio = source.refractionRatio;\n      this.wireframe = source.wireframe;\n      this.wireframeLinewidth = source.wireframeLinewidth;\n      this.wireframeLinecap = source.wireframeLinecap;\n      this.wireframeLinejoin = source.wireframeLinejoin;\n      return this;\n    }\n  }]);\n\n  return MeshLambertMaterial;\n}(Material);\n\nMeshLambertMaterial.prototype.isMeshLambertMaterial = true;\nexport { MeshLambertMaterial };","map":null,"metadata":{},"sourceType":"module"}