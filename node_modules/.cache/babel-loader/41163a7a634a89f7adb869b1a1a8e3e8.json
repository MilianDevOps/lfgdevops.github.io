{"ast":null,"code":"import _classCallCheck from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport NodeMaterial from './NodeMaterial.js';\nimport { LineBasicMaterial } from 'three';\nvar defaultValues = new LineBasicMaterial();\n\nvar LineBasicNodeMaterial = /*#__PURE__*/function (_NodeMaterial) {\n  _inherits(LineBasicNodeMaterial, _NodeMaterial);\n\n  var _super = _createSuper(LineBasicNodeMaterial);\n\n  function LineBasicNodeMaterial(parameters) {\n    var _this;\n\n    _classCallCheck(this, LineBasicNodeMaterial);\n\n    _this = _super.call(this);\n    _this.colorNode = null;\n    _this.opacityNode = null;\n    _this.alphaTestNode = null;\n    _this.lightNode = null;\n    _this.positionNode = null;\n\n    _this.setDefaultValues(defaultValues);\n\n    _this.setValues(parameters);\n\n    return _this;\n  }\n\n  _createClass(LineBasicNodeMaterial, [{\n    key: \"copy\",\n    value: function copy(source) {\n      this.colorNode = source.colorNode;\n      this.opacityNode = source.opacityNode;\n      this.alphaTestNode = source.alphaTestNode;\n      this.lightNode = source.lightNode;\n      this.positionNode = source.positionNode;\n      return _get(_getPrototypeOf(LineBasicNodeMaterial.prototype), \"copy\", this).call(this, source);\n    }\n  }]);\n\n  return LineBasicNodeMaterial;\n}(NodeMaterial);\n\nLineBasicNodeMaterial.prototype.isLineBasicNodeMaterial = true;\nexport default LineBasicNodeMaterial;","map":null,"metadata":{},"sourceType":"module"}