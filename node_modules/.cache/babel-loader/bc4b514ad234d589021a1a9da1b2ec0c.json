{"ast":null,"code":"import _classCallCheck from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport TextureNode from './TextureNode.js';\nimport UniformNode from '../core/UniformNode.js';\nimport ReflectNode from './ReflectNode.js';\n\nvar CubeTextureNode = /*#__PURE__*/function (_TextureNode) {\n  _inherits(CubeTextureNode, _TextureNode);\n\n  var _super = _createSuper(CubeTextureNode);\n\n  function CubeTextureNode(value) {\n    var uvNode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new ReflectNode();\n    var biasNode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n    _classCallCheck(this, CubeTextureNode);\n\n    return _super.call(this, value, uvNode, biasNode);\n  }\n\n  _createClass(CubeTextureNode, [{\n    key: \"getInputType\",\n    value: function getInputType() {\n      return 'cubeTexture';\n    }\n  }, {\n    key: \"generate\",\n    value: function generate(builder, output) {\n      var texture = this.value;\n\n      if (!texture || texture.isCubeTexture !== true) {\n        throw new Error('CubeTextureNode: Need a three.js cube texture.');\n      }\n\n      var textureProperty = UniformNode.prototype.generate.call(this, builder, 'cubeTexture');\n\n      if (output === 'sampler') {\n        return textureProperty + '_sampler';\n      } else if (builder.isReference(output)) {\n        return textureProperty;\n      } else {\n        var nodeData = builder.getDataFromNode(this);\n        var snippet = nodeData.snippet;\n\n        if (snippet === undefined) {\n          var uvSnippet = this.uvNode.build(builder, 'vec3');\n          var biasNode = this.biasNode;\n\n          if (biasNode !== null) {\n            var biasSnippet = biasNode.build(builder, 'float');\n            snippet = builder.getCubeTextureBias(textureProperty, uvSnippet, biasSnippet);\n          } else {\n            snippet = builder.getCubeTexture(textureProperty, uvSnippet);\n          }\n\n          nodeData.snippet = snippet;\n        }\n\n        return builder.format(snippet, 'vec4', output);\n      }\n    }\n  }]);\n\n  return CubeTextureNode;\n}(TextureNode);\n\nCubeTextureNode.prototype.isCubeTextureNode = true;\nexport default CubeTextureNode;","map":null,"metadata":{},"sourceType":"module"}