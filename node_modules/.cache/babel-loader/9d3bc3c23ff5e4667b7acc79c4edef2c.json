{"ast":null,"code":"import _objectWithoutProperties from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"multisample\", \"samples\"];\nimport { useMemo, useEffect } from 'react';\nimport * as THREE from 'three';\nimport { useThree } from '@react-three/fiber'; // ðŸ‘‡ uncomment when TS version supports function overloads\n// export function useFBO(settings?: FBOSettings)\n\nfunction useFBO(width, height, settings) {\n  var gl = useThree(function (_ref) {\n    var gl = _ref.gl;\n    return gl;\n  });\n  var size = useThree(function (_ref2) {\n    var size = _ref2.size;\n    return size;\n  });\n  var dpr = useMemo(function () {\n    return gl.getPixelRatio();\n  }, [gl]);\n\n  var _width = typeof width === 'number' ? width : size.width * dpr;\n\n  var _height = typeof height === 'number' ? height : size.height * dpr;\n\n  var _settings = (typeof width === 'number' ? settings : width) || {};\n\n  var target = useMemo(function () {\n    var multisample = _settings.multisample,\n        samples = _settings.samples,\n        targetSettings = _objectWithoutProperties(_settings, _excluded);\n\n    var target;\n\n    if (multisample && gl.capabilities.isWebGL2) {\n      target = new THREE.WebGLMultisampleRenderTarget(_width, _height, targetSettings);\n      if (samples) target.samples = samples;\n    } else {\n      target = new THREE.WebGLRenderTarget(_width, _height, targetSettings);\n    }\n\n    return target;\n  }, []);\n  useEffect(function () {\n    target.setSize(_width, _height);\n  }, [target, _width, _height]);\n  useEffect(function () {\n    return function () {\n      return target.dispose();\n    };\n  }, []);\n  return target;\n}\n\nexport { useFBO };","map":null,"metadata":{},"sourceType":"module"}