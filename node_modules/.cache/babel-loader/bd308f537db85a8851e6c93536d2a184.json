{"ast":null,"code":"import _createClass from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _assertThisInitialized from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { EventDispatcher, Plane, Raycaster, Vector2, Vector3, Matrix4 } from 'three';\n\nvar DragControls = /*#__PURE__*/function (_EventDispatcher) {\n  _inherits(DragControls, _EventDispatcher);\n\n  var _super = _createSuper(DragControls);\n\n  function DragControls(_objects, _camera, _domElement) {\n    var _this;\n\n    _classCallCheck(this, DragControls);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"enabled\", true);\n\n    _defineProperty(_assertThisInitialized(_this), \"transformGroup\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_objects\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_camera\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_domElement\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_plane\", new Plane());\n\n    _defineProperty(_assertThisInitialized(_this), \"_raycaster\", new Raycaster());\n\n    _defineProperty(_assertThisInitialized(_this), \"_mouse\", new Vector2());\n\n    _defineProperty(_assertThisInitialized(_this), \"_offset\", new Vector3());\n\n    _defineProperty(_assertThisInitialized(_this), \"_intersection\", new Vector3());\n\n    _defineProperty(_assertThisInitialized(_this), \"_worldPosition\", new Vector3());\n\n    _defineProperty(_assertThisInitialized(_this), \"_inverseMatrix\", new Matrix4());\n\n    _defineProperty(_assertThisInitialized(_this), \"_intersections\", []);\n\n    _defineProperty(_assertThisInitialized(_this), \"_selected\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_hovered\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"activate\", function () {\n      _this._domElement.addEventListener('pointermove', _this.onPointerMove);\n\n      _this._domElement.addEventListener('pointerdown', _this.onPointerDown);\n\n      _this._domElement.addEventListener('pointerup', _this.onPointerCancel);\n\n      _this._domElement.addEventListener('pointerleave', _this.onPointerCancel);\n\n      _this._domElement.addEventListener('touchmove', _this.onTouchMove);\n\n      _this._domElement.addEventListener('touchstart', _this.onTouchStart);\n\n      _this._domElement.addEventListener('touchend', _this.onTouchEnd);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"deactivate\", function () {\n      _this._domElement.removeEventListener('pointermove', _this.onPointerMove);\n\n      _this._domElement.removeEventListener('pointerdown', _this.onPointerDown);\n\n      _this._domElement.removeEventListener('pointerup', _this.onPointerCancel);\n\n      _this._domElement.removeEventListener('pointerleave', _this.onPointerCancel);\n\n      _this._domElement.removeEventListener('touchmove', _this.onTouchMove);\n\n      _this._domElement.removeEventListener('touchstart', _this.onTouchStart);\n\n      _this._domElement.removeEventListener('touchend', _this.onTouchEnd);\n\n      _this._domElement.style.cursor = '';\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"dispose\", function () {\n      return _this.deactivate();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getObjects\", function () {\n      return _this._objects;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onMouseMove\", function (event) {\n      var rect = _this._domElement.getBoundingClientRect();\n\n      _this._mouse.x = (event.clientX - rect.left) / rect.width * 2 - 1;\n      _this._mouse.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n\n      _this._raycaster.setFromCamera(_this._mouse, _this._camera);\n\n      if (_this._selected && _this.enabled) {\n        if (_this._raycaster.ray.intersectPlane(_this._plane, _this._intersection)) {\n          _this._selected.position.copy(_this._intersection.sub(_this._offset).applyMatrix4(_this._inverseMatrix));\n        }\n\n        _this.dispatchEvent({\n          type: 'drag',\n          object: _this._selected\n        });\n\n        return;\n      }\n\n      _this._intersections.length = 0;\n\n      _this._raycaster.setFromCamera(_this._mouse, _this._camera);\n\n      _this._raycaster.intersectObjects(_this._objects, true, _this._intersections);\n\n      if (_this._intersections.length > 0) {\n        var object = _this._intersections[0].object;\n\n        _this._plane.setFromNormalAndCoplanarPoint(_this._camera.getWorldDirection(_this._plane.normal), _this._worldPosition.setFromMatrixPosition(object.matrixWorld));\n\n        if (_this._hovered !== object) {\n          _this.dispatchEvent({\n            type: 'hoveron',\n            object: object\n          });\n\n          _this._domElement.style.cursor = 'pointer';\n          _this._hovered = object;\n        }\n      } else {\n        if (_this._hovered !== null) {\n          _this.dispatchEvent({\n            type: 'hoveroff',\n            object: _this._hovered\n          });\n\n          _this._domElement.style.cursor = 'auto';\n          _this._hovered = null;\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onMouseDown\", function () {\n      _this._intersections.length = 0;\n\n      _this._raycaster.setFromCamera(_this._mouse, _this._camera);\n\n      _this._raycaster.intersectObjects(_this._objects, true, _this._intersections);\n\n      if (_this._intersections.length > 0) {\n        _this._selected = _this.transformGroup === true ? _this._objects[0] : _this._intersections[0].object;\n\n        if (_this._raycaster.ray.intersectPlane(_this._plane, _this._intersection) && _this._selected.parent) {\n          _this._inverseMatrix.copy(_this._selected.parent.matrixWorld).invert();\n\n          _this._offset.copy(_this._intersection).sub(_this._worldPosition.setFromMatrixPosition(_this._selected.matrixWorld));\n        }\n\n        _this._domElement.style.cursor = 'move';\n\n        _this.dispatchEvent({\n          type: 'dragstart',\n          object: _this._selected\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onMouseCancel\", function () {\n      if (_this._selected) {\n        _this.dispatchEvent({\n          type: 'dragend',\n          object: _this._selected\n        });\n\n        _this._selected = null;\n      }\n\n      _this._domElement.style.cursor = _this._hovered ? 'pointer' : 'auto';\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onPointerMove\", function (event) {\n      switch (event.pointerType) {\n        case 'mouse':\n        case 'pen':\n          _this.onMouseMove(event);\n\n          break;\n        // TODO touch\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onPointerDown\", function (event) {\n      switch (event.pointerType) {\n        case 'mouse':\n        case 'pen':\n          _this.onMouseDown();\n\n          break;\n        // TODO touch\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onPointerCancel\", function (event) {\n      switch (event.pointerType) {\n        case 'mouse':\n        case 'pen':\n          _this.onMouseCancel();\n\n          break;\n        // TODO touch\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onTouchMove\", function (event) {\n      event.preventDefault();\n      var newEvent = event.changedTouches[0];\n\n      var rect = _this._domElement.getBoundingClientRect();\n\n      _this._mouse.x = (newEvent.clientX - rect.left) / rect.width * 2 - 1;\n      _this._mouse.y = -((newEvent.clientY - rect.top) / rect.height) * 2 + 1;\n\n      _this._raycaster.setFromCamera(_this._mouse, _this._camera);\n\n      if (_this._selected && _this.enabled) {\n        if (_this._raycaster.ray.intersectPlane(_this._plane, _this._intersection)) {\n          _this._selected.position.copy(_this._intersection.sub(_this._offset).applyMatrix4(_this._inverseMatrix));\n        }\n\n        _this.dispatchEvent({\n          type: 'drag',\n          object: _this._selected\n        });\n\n        return;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onTouchStart\", function (event) {\n      event.preventDefault();\n      var newEvent = event.changedTouches[0];\n\n      var rect = _this._domElement.getBoundingClientRect();\n\n      _this._mouse.x = (newEvent.clientX - rect.left) / rect.width * 2 - 1;\n      _this._mouse.y = -((newEvent.clientY - rect.top) / rect.height) * 2 + 1;\n      _this._intersections.length = 0;\n\n      _this._raycaster.setFromCamera(_this._mouse, _this._camera);\n\n      _this._raycaster.intersectObjects(_this._objects, true, _this._intersections);\n\n      if (_this._intersections.length > 0) {\n        _this._selected = _this.transformGroup === true ? _this._objects[0] : _this._intersections[0].object;\n\n        _this._plane.setFromNormalAndCoplanarPoint(_this._camera.getWorldDirection(_this._plane.normal), _this._worldPosition.setFromMatrixPosition(_this._selected.matrixWorld));\n\n        if (_this._raycaster.ray.intersectPlane(_this._plane, _this._intersection) && _this._selected.parent) {\n          _this._inverseMatrix.copy(_this._selected.parent.matrixWorld).invert();\n\n          _this._offset.copy(_this._intersection).sub(_this._worldPosition.setFromMatrixPosition(_this._selected.matrixWorld));\n        }\n\n        _this._domElement.style.cursor = 'move';\n\n        _this.dispatchEvent({\n          type: 'dragstart',\n          object: _this._selected\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onTouchEnd\", function (event) {\n      event.preventDefault();\n\n      if (_this._selected) {\n        _this.dispatchEvent({\n          type: 'dragend',\n          object: _this._selected\n        });\n\n        _this._selected = null;\n      }\n\n      _this._domElement.style.cursor = 'auto';\n    });\n\n    _this._objects = _objects;\n    _this._camera = _camera;\n    _this._domElement = _domElement;\n\n    _this.activate();\n\n    return _this;\n  }\n\n  return _createClass(DragControls);\n}(EventDispatcher);\n\nexport { DragControls };","map":null,"metadata":{},"sourceType":"module"}