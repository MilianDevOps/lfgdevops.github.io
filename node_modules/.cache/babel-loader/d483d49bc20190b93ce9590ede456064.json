{"ast":null,"code":"import _defineProperty from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { useThree, useLoader } from '@react-three/fiber';\nimport { useEffect } from 'react';\nimport { KTX2Loader } from 'three-stdlib';\nimport { IsObject } from './useTexture.js';\nvar cdn = 'https://cdn.jsdelivr.net/gh/pmndrs/drei-assets@master';\n\nfunction useKTX2(input) {\n  var basisPath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\".concat(cdn, \"/basis/\");\n  var gl = useThree(function (state) {\n    return state.gl;\n  });\n  var textures = useLoader(KTX2Loader, IsObject(input) ? Object.values(input) : input, function (loader) {\n    loader.detectSupport(gl);\n    loader.setTranscoderPath(basisPath);\n  }); // https://github.com/mrdoob/three.js/issues/22696\n  // Upload the texture to the GPU immediately instead of waiting for the first render\n\n  useEffect(function () {\n    var array = Array.isArray(textures) ? textures : [textures];\n    array.forEach(gl.initTexture);\n  }, [gl, textures]);\n\n  if (IsObject(input)) {\n    var keys = Object.keys(input);\n    var keyed = {};\n    keys.forEach(function (key) {\n      return Object.assign(keyed, _defineProperty({}, key, textures[keys.indexOf(key)]));\n    });\n    return keyed;\n  } else {\n    return textures;\n  }\n}\n\nuseKTX2.preload = function (url) {\n  var basisPath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\".concat(cdn, \"/basis/\");\n  return useLoader.preload(KTX2Loader, url, function (loader) {\n    loader.setTranscoderPath(basisPath);\n  });\n}; // @ts-expect-error new in r3f 7.0.5\n\n\nuseKTX2.clear = function (input) {\n  return useLoader.clear(KTX2Loader, input);\n};\n\nexport { useKTX2 };","map":null,"metadata":{},"sourceType":"module"}