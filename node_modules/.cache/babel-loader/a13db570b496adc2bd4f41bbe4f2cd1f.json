{"ast":null,"code":"import _classCallCheck from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Vector3 } from '../../math/Vector3.js';\nimport { Curve } from '../core/Curve.js';\n\nvar LineCurve3 = /*#__PURE__*/function (_Curve) {\n  _inherits(LineCurve3, _Curve);\n\n  var _super = _createSuper(LineCurve3);\n\n  function LineCurve3() {\n    var _this;\n\n    var v1 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Vector3();\n    var v2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3();\n\n    _classCallCheck(this, LineCurve3);\n\n    _this = _super.call(this);\n    _this.type = 'LineCurve3';\n    _this.isLineCurve3 = true;\n    _this.v1 = v1;\n    _this.v2 = v2;\n    return _this;\n  }\n\n  _createClass(LineCurve3, [{\n    key: \"getPoint\",\n    value: function getPoint(t) {\n      var optionalTarget = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3();\n      var point = optionalTarget;\n\n      if (t === 1) {\n        point.copy(this.v2);\n      } else {\n        point.copy(this.v2).sub(this.v1);\n        point.multiplyScalar(t).add(this.v1);\n      }\n\n      return point;\n    } // Line curve is linear, so we can overwrite default getPointAt\n\n  }, {\n    key: \"getPointAt\",\n    value: function getPointAt(u, optionalTarget) {\n      return this.getPoint(u, optionalTarget);\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(source) {\n      _get(_getPrototypeOf(LineCurve3.prototype), \"copy\", this).call(this, source);\n\n      this.v1.copy(source.v1);\n      this.v2.copy(source.v2);\n      return this;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var data = _get(_getPrototypeOf(LineCurve3.prototype), \"toJSON\", this).call(this);\n\n      data.v1 = this.v1.toArray();\n      data.v2 = this.v2.toArray();\n      return data;\n    }\n  }, {\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      _get(_getPrototypeOf(LineCurve3.prototype), \"fromJSON\", this).call(this, json);\n\n      this.v1.fromArray(json.v1);\n      this.v2.fromArray(json.v2);\n      return this;\n    }\n  }]);\n\n  return LineCurve3;\n}(Curve);\n\nexport { LineCurve3 };","map":null,"metadata":{},"sourceType":"module"}