{"ast":null,"code":"import _classCallCheck from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Vector3 } from '../math/Vector3.js';\nimport { Color } from '../math/Color.js';\nimport { Object3D } from '../core/Object3D.js';\nimport { Mesh } from '../objects/Mesh.js';\nimport { MeshBasicMaterial } from '../materials/MeshBasicMaterial.js';\nimport { OctahedronGeometry } from '../geometries/OctahedronGeometry.js';\nimport { BufferAttribute } from '../core/BufferAttribute.js';\n\nvar _vector = /*@__PURE__*/new Vector3();\n\nvar _color1 = /*@__PURE__*/new Color();\n\nvar _color2 = /*@__PURE__*/new Color();\n\nvar HemisphereLightHelper = /*#__PURE__*/function (_Object3D) {\n  _inherits(HemisphereLightHelper, _Object3D);\n\n  var _super = _createSuper(HemisphereLightHelper);\n\n  function HemisphereLightHelper(light, size, color) {\n    var _this;\n\n    _classCallCheck(this, HemisphereLightHelper);\n\n    _this = _super.call(this);\n    _this.light = light;\n\n    _this.light.updateMatrixWorld();\n\n    _this.matrix = light.matrixWorld;\n    _this.matrixAutoUpdate = false;\n    _this.color = color;\n    var geometry = new OctahedronGeometry(size);\n    geometry.rotateY(Math.PI * 0.5);\n    _this.material = new MeshBasicMaterial({\n      wireframe: true,\n      fog: false,\n      toneMapped: false\n    });\n    if (_this.color === undefined) _this.material.vertexColors = true;\n    var position = geometry.getAttribute('position');\n    var colors = new Float32Array(position.count * 3);\n    geometry.setAttribute('color', new BufferAttribute(colors, 3));\n\n    _this.add(new Mesh(geometry, _this.material));\n\n    _this.update();\n\n    return _this;\n  }\n\n  _createClass(HemisphereLightHelper, [{\n    key: \"dispose\",\n    value: function dispose() {\n      this.children[0].geometry.dispose();\n      this.children[0].material.dispose();\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var mesh = this.children[0];\n\n      if (this.color !== undefined) {\n        this.material.color.set(this.color);\n      } else {\n        var colors = mesh.geometry.getAttribute('color');\n\n        _color1.copy(this.light.color);\n\n        _color2.copy(this.light.groundColor);\n\n        for (var i = 0, l = colors.count; i < l; i++) {\n          var color = i < l / 2 ? _color1 : _color2;\n          colors.setXYZ(i, color.r, color.g, color.b);\n        }\n\n        colors.needsUpdate = true;\n      }\n\n      mesh.lookAt(_vector.setFromMatrixPosition(this.light.matrixWorld).negate());\n    }\n  }]);\n\n  return HemisphereLightHelper;\n}(Object3D);\n\nexport { HemisphereLightHelper };","map":null,"metadata":{},"sourceType":"module"}