{"ast":null,"code":"import { Cache } from './Cache.js';\nimport { Loader } from './Loader.js';\nimport { createElementNS } from '../utils.js';\n\nclass ImageLoader extends Loader {\n  constructor(manager) {\n    super(manager);\n  }\n\n  load(url, onLoad, onProgress, onError) {\n    if (this.path !== undefined) url = this.path + url;\n    url = this.manager.resolveURL(url);\n    const scope = this;\n    const cached = Cache.get(url);\n\n    if (cached !== undefined) {\n      scope.manager.itemStart(url);\n      setTimeout(function () {\n        if (onLoad) onLoad(cached);\n        scope.manager.itemEnd(url);\n      }, 0);\n      return cached;\n    }\n\n    const image = createElementNS('img');\n\n    function onImageLoad() {\n      removeEventListeners();\n      Cache.add(url, this);\n      if (onLoad) onLoad(this);\n      scope.manager.itemEnd(url);\n    }\n\n    function onImageError(event) {\n      removeEventListeners();\n      if (onError) onError(event);\n      scope.manager.itemError(url);\n      scope.manager.itemEnd(url);\n    }\n\n    function removeEventListeners() {\n      image.removeEventListener('load', onImageLoad, false);\n      image.removeEventListener('error', onImageError, false);\n    }\n\n    image.addEventListener('load', onImageLoad, false);\n    image.addEventListener('error', onImageError, false);\n\n    if (url.substr(0, 5) !== 'data:') {\n      if (this.crossOrigin !== undefined) image.crossOrigin = this.crossOrigin;\n    }\n\n    scope.manager.itemStart(url);\n    image.src = url;\n    return image;\n  }\n\n}\n\nexport { ImageLoader };","map":null,"metadata":{},"sourceType":"module"}