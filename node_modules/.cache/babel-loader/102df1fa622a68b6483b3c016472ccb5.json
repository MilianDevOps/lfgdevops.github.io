{"ast":null,"code":"import _classCallCheck from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Matrix4, Vector3, SphereGeometry, BoxGeometry, MeshStandardMaterial, InstancedMesh, DynamicDrawUsage } from 'three';\n\nvar _matrix = new Matrix4();\n\nvar _vector = new Vector3();\n\nvar XRHandPrimitiveModel = /*#__PURE__*/function () {\n  function XRHandPrimitiveModel(handModel, controller, path, handedness, options) {\n    _classCallCheck(this, XRHandPrimitiveModel);\n\n    this.controller = controller;\n    this.handModel = handModel;\n    this.envMap = null;\n    var geometry;\n\n    if (!options || !options.primitive || options.primitive === 'sphere') {\n      geometry = new SphereGeometry(1, 10, 10);\n    } else if (options.primitive === 'box') {\n      geometry = new BoxGeometry(1, 1, 1);\n    }\n\n    var material = new MeshStandardMaterial();\n    this.handMesh = new InstancedMesh(geometry, material, 30);\n    this.handMesh.instanceMatrix.setUsage(DynamicDrawUsage); // will be updated every frame\n\n    this.handMesh.castShadow = true;\n    this.handMesh.receiveShadow = true;\n    this.handModel.add(this.handMesh);\n    this.joints = ['wrist', 'thumb-metacarpal', 'thumb-phalanx-proximal', 'thumb-phalanx-distal', 'thumb-tip', 'index-finger-metacarpal', 'index-finger-phalanx-proximal', 'index-finger-phalanx-intermediate', 'index-finger-phalanx-distal', 'index-finger-tip', 'middle-finger-metacarpal', 'middle-finger-phalanx-proximal', 'middle-finger-phalanx-intermediate', 'middle-finger-phalanx-distal', 'middle-finger-tip', 'ring-finger-metacarpal', 'ring-finger-phalanx-proximal', 'ring-finger-phalanx-intermediate', 'ring-finger-phalanx-distal', 'ring-finger-tip', 'pinky-finger-metacarpal', 'pinky-finger-phalanx-proximal', 'pinky-finger-phalanx-intermediate', 'pinky-finger-phalanx-distal', 'pinky-finger-tip'];\n  }\n\n  _createClass(XRHandPrimitiveModel, [{\n    key: \"updateMesh\",\n    value: function updateMesh() {\n      var defaultRadius = 0.008;\n      var joints = this.controller.joints;\n      var count = 0;\n\n      for (var i = 0; i < this.joints.length; i++) {\n        var joint = joints[this.joints[i]];\n\n        if (joint.visible) {\n          _vector.setScalar(joint.jointRadius || defaultRadius);\n\n          _matrix.compose(joint.position, joint.quaternion, _vector);\n\n          this.handMesh.setMatrixAt(i, _matrix);\n          count++;\n        }\n      }\n\n      this.handMesh.count = count;\n      this.handMesh.instanceMatrix.needsUpdate = true;\n    }\n  }]);\n\n  return XRHandPrimitiveModel;\n}();\n\nexport { XRHandPrimitiveModel };","map":null,"metadata":{},"sourceType":"module"}