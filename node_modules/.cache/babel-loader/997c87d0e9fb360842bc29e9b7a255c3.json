{"ast":null,"code":"import _construct from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/construct.js\";\nimport * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\n\nfunction useHelper(object3D, helperConstructor) {\n  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n\n  var helper = React.useRef();\n  var scene = useThree(function (state) {\n    return state.scene;\n  });\n  React.useEffect(function () {\n    if (object3D) {\n      if (helperConstructor && object3D != null && object3D.current) {\n        helper.current = _construct(helperConstructor, [object3D.current].concat(args));\n\n        if (helper.current) {\n          scene.add(helper.current);\n        }\n      }\n    }\n    /**\n     * Dispose of the helper if no object 3D is passed\n     */\n\n\n    if (!object3D && helper.current) {\n      scene.remove(helper.current);\n    }\n\n    return function () {\n      if (helper.current) {\n        scene.remove(helper.current);\n      }\n    };\n  }, [scene, helperConstructor, object3D, args]);\n  useFrame(function () {\n    var _helper$current;\n\n    if ((_helper$current = helper.current) != null && _helper$current.update) {\n      helper.current.update();\n    }\n  });\n  return helper;\n}\n\nexport { useHelper };","map":null,"metadata":{},"sourceType":"module"}