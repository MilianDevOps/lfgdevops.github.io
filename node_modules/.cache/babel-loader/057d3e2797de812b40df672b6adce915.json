{"ast":null,"code":"import _classCallCheck from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport Node from '../core/Node.js';\nimport ConstNode from '../core/ConstNode.js';\nimport UVNode from '../accessors/UVNode.js';\nimport MathNode from '../math/MathNode.js';\nimport OperatorNode from '../math/OperatorNode.js';\nimport SplitNode from './SplitNode.js';\nimport JoinNode from './JoinNode.js';\n\nvar SpriteSheetUVNode = /*#__PURE__*/function (_Node) {\n  _inherits(SpriteSheetUVNode, _Node);\n\n  var _super = _createSuper(SpriteSheetUVNode);\n\n  function SpriteSheetUVNode(countNode) {\n    var _this;\n\n    var uvNode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new UVNode();\n    var frameNode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new ConstNode(0);\n\n    _classCallCheck(this, SpriteSheetUVNode);\n\n    _this = _super.call(this, 'vec2');\n    _this.countNode = countNode;\n    _this.uvNode = uvNode;\n    _this.frameNode = frameNode;\n    return _this;\n  }\n\n  _createClass(SpriteSheetUVNode, [{\n    key: \"generate\",\n    value: function generate(builder) {\n      var count = this.countNode;\n      var uv = this.uvNode;\n      var frame = this.frameNode;\n      var one = new ConstNode(1);\n      var width = new SplitNode(count, 'x');\n      var height = new SplitNode(count, 'y');\n      var total = new OperatorNode('*', width, height);\n      var roundFrame = new MathNode(MathNode.FLOOR, new MathNode(MathNode.MOD, frame, total));\n      var frameNum = new OperatorNode('+', roundFrame, one);\n      var cell = new MathNode(MathNode.MOD, roundFrame, width);\n      var row = new MathNode(MathNode.CEIL, new OperatorNode('/', frameNum, width));\n      var rowInv = new OperatorNode('-', height, row);\n      var scale = new OperatorNode('/', one, count);\n      var uvFrameOffset = new JoinNode([new OperatorNode('*', cell, new SplitNode(scale, 'x')), new OperatorNode('*', rowInv, new SplitNode(scale, 'y'))]);\n      var uvScale = new OperatorNode('*', uv, scale);\n      var uvFrame = new OperatorNode('+', uvScale, uvFrameOffset);\n      return uvFrame.build(builder, this.getNodeType(builder));\n    }\n  }]);\n\n  return SpriteSheetUVNode;\n}(Node);\n\nexport default SpriteSheetUVNode;","map":null,"metadata":{},"sourceType":"module"}