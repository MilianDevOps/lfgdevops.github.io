{"ast":null,"code":"import { Color } from '../math/Color.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { LightProbe } from './LightProbe.js';\n\nclass HemisphereLightProbe extends LightProbe {\n  constructor(skyColor, groundColor) {\n    let intensity = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    super(undefined, intensity);\n    const color1 = new Color().set(skyColor);\n    const color2 = new Color().set(groundColor);\n    const sky = new Vector3(color1.r, color1.g, color1.b);\n    const ground = new Vector3(color2.r, color2.g, color2.b); // without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\n\n    const c0 = Math.sqrt(Math.PI);\n    const c1 = c0 * Math.sqrt(0.75);\n    this.sh.coefficients[0].copy(sky).add(ground).multiplyScalar(c0);\n    this.sh.coefficients[1].copy(sky).sub(ground).multiplyScalar(c1);\n  }\n\n}\n\nHemisphereLightProbe.prototype.isHemisphereLightProbe = true;\nexport { HemisphereLightProbe };","map":null,"metadata":{},"sourceType":"module"}