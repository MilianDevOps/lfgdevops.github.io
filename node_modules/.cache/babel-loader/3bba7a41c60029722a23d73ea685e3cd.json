{"ast":null,"code":"import _classCallCheck from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Light } from './Light.js';\nimport { PointLightShadow } from './PointLightShadow.js';\n\nvar PointLight = /*#__PURE__*/function (_Light) {\n  _inherits(PointLight, _Light);\n\n  var _super = _createSuper(PointLight);\n\n  function PointLight(color, intensity) {\n    var _this;\n\n    var distance = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    var decay = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n\n    _classCallCheck(this, PointLight);\n\n    _this = _super.call(this, color, intensity);\n    _this.type = 'PointLight';\n    _this.distance = distance;\n    _this.decay = decay; // for physically correct lights, should be 2.\n\n    _this.shadow = new PointLightShadow();\n    return _this;\n  }\n\n  _createClass(PointLight, [{\n    key: \"power\",\n    get: function get() {\n      // compute the light's luminous power (in lumens) from its intensity (in candela)\n      // for an isotropic light source, luminous power (lm) = 4 Ï€ luminous intensity (cd)\n      return this.intensity * 4 * Math.PI;\n    },\n    set: function set(power) {\n      // set the light's intensity (in candela) from the desired luminous power (in lumens)\n      this.intensity = power / (4 * Math.PI);\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.shadow.dispose();\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(source) {\n      _get(_getPrototypeOf(PointLight.prototype), \"copy\", this).call(this, source);\n\n      this.distance = source.distance;\n      this.decay = source.decay;\n      this.shadow = source.shadow.clone();\n      return this;\n    }\n  }]);\n\n  return PointLight;\n}(Light);\n\nPointLight.prototype.isPointLight = true;\nexport { PointLight };","map":null,"metadata":{},"sourceType":"module"}