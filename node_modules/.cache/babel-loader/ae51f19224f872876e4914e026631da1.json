{"ast":null,"code":"import _classCallCheck from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/robertrinearson/Documents/blockchain/lfg/cyberdeck-twitter/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Line } from './Line.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { Float32BufferAttribute } from '../core/BufferAttribute.js';\n\nvar _start = /*@__PURE__*/new Vector3();\n\nvar _end = /*@__PURE__*/new Vector3();\n\nvar LineSegments = /*#__PURE__*/function (_Line) {\n  _inherits(LineSegments, _Line);\n\n  var _super = _createSuper(LineSegments);\n\n  function LineSegments(geometry, material) {\n    var _this;\n\n    _classCallCheck(this, LineSegments);\n\n    _this = _super.call(this, geometry, material);\n    _this.type = 'LineSegments';\n    return _this;\n  }\n\n  _createClass(LineSegments, [{\n    key: \"computeLineDistances\",\n    value: function computeLineDistances() {\n      var geometry = this.geometry;\n\n      if (geometry.isBufferGeometry) {\n        // we assume non-indexed geometry\n        if (geometry.index === null) {\n          var positionAttribute = geometry.attributes.position;\n          var lineDistances = [];\n\n          for (var i = 0, l = positionAttribute.count; i < l; i += 2) {\n            _start.fromBufferAttribute(positionAttribute, i);\n\n            _end.fromBufferAttribute(positionAttribute, i + 1);\n\n            lineDistances[i] = i === 0 ? 0 : lineDistances[i - 1];\n            lineDistances[i + 1] = lineDistances[i] + _start.distanceTo(_end);\n          }\n\n          geometry.setAttribute('lineDistance', new Float32BufferAttribute(lineDistances, 1));\n        } else {\n          console.warn('THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.');\n        }\n      } else if (geometry.isGeometry) {\n        console.error('THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n      }\n\n      return this;\n    }\n  }]);\n\n  return LineSegments;\n}(Line);\n\nLineSegments.prototype.isLineSegments = true;\nexport { LineSegments };","map":null,"metadata":{},"sourceType":"module"}